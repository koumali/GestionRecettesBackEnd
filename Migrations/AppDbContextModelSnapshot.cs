// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "060 Hansen Views",
                            City = "East Alexanderfort",
                            CreatedAt = new DateTime(2022, 10, 5, 13, 40, 42, 544, DateTimeKind.Local).AddTicks(9751),
                            Email = "Eliseo_Botsford@yahoo.com",
                            IsVerified = false,
                            Latitude = 60.918500000000002,
                            Longitude = 70.925700000000006,
                            Name = "Principal Tactics Orchestrator",
                            Tel = "916-545-3370 x1349",
                            ZipCode = "27432-5405"
                        },
                        new
                        {
                            Id = 2,
                            Address = "4780 Harris Wall",
                            City = "North Kenna",
                            CreatedAt = new DateTime(2022, 10, 31, 14, 28, 15, 580, DateTimeKind.Local).AddTicks(6684),
                            Email = "Collin74@gmail.com",
                            IsVerified = false,
                            Latitude = -50.716700000000003,
                            Longitude = 148.6438,
                            Name = "Corporate Implementation Liaison",
                            Tel = "364-793-6504 x680",
                            ZipCode = "26091"
                        },
                        new
                        {
                            Id = 3,
                            Address = "894 Rolfson Parkway",
                            City = "South Derrickfort",
                            CreatedAt = new DateTime(2022, 11, 17, 16, 24, 48, 654, DateTimeKind.Local).AddTicks(7115),
                            Email = "Felipa.Cartwright@gmail.com",
                            IsVerified = false,
                            Latitude = 23.108799999999999,
                            Longitude = -136.268,
                            Name = "Dynamic Applications Director",
                            Tel = "259.419.9467 x20021",
                            ZipCode = "95905"
                        },
                        new
                        {
                            Id = 4,
                            Address = "404 Schumm Flat",
                            City = "Tylerside",
                            CreatedAt = new DateTime(2022, 12, 31, 18, 20, 18, 848, DateTimeKind.Local).AddTicks(9744),
                            Email = "Jennings_Mitchell@yahoo.com",
                            IsVerified = false,
                            Latitude = -70.596400000000003,
                            Longitude = 4.0307000000000004,
                            Name = "Legacy Branding Specialist",
                            Tel = "1-883-822-9467",
                            ZipCode = "13317"
                        },
                        new
                        {
                            Id = 5,
                            Address = "691 Freeda Spur",
                            City = "North Dimitritown",
                            CreatedAt = new DateTime(2023, 7, 11, 1, 32, 28, 753, DateTimeKind.Local).AddTicks(553),
                            Email = "Lou_Grimes@yahoo.com",
                            IsVerified = false,
                            Latitude = -4.2397,
                            Longitude = 152.0771,
                            Name = "Legacy Accounts Architect",
                            Tel = "700-378-3582 x6702",
                            ZipCode = "91775-5217"
                        },
                        new
                        {
                            Id = 6,
                            Address = "349 Pacocha Inlet",
                            City = "New Keirabury",
                            CreatedAt = new DateTime(2022, 11, 10, 6, 35, 19, 436, DateTimeKind.Local).AddTicks(3890),
                            Email = "Lonnie24@yahoo.com",
                            IsVerified = false,
                            Latitude = 42.260199999999998,
                            Longitude = 38.253999999999998,
                            Name = "International Web Assistant",
                            Tel = "542.398.9809 x8690",
                            ZipCode = "13756-8710"
                        },
                        new
                        {
                            Id = 7,
                            Address = "606 Cassandre Neck",
                            City = "Brookeland",
                            CreatedAt = new DateTime(2023, 5, 14, 3, 42, 27, 519, DateTimeKind.Local).AddTicks(7784),
                            Email = "Houston35@hotmail.com",
                            IsVerified = false,
                            Latitude = -10.809799999999999,
                            Longitude = -0.14149999999999999,
                            Name = "Corporate Assurance Representative",
                            Tel = "1-976-471-5147",
                            ZipCode = "00582"
                        },
                        new
                        {
                            Id = 8,
                            Address = "21965 D'Amore View",
                            City = "East Dorthy",
                            CreatedAt = new DateTime(2022, 11, 24, 3, 4, 12, 811, DateTimeKind.Local).AddTicks(8898),
                            Email = "Constance.Strosin27@yahoo.com",
                            IsVerified = false,
                            Latitude = 55.369599999999998,
                            Longitude = -177.8569,
                            Name = "Principal Solutions Consultant",
                            Tel = "(366) 982-0034",
                            ZipCode = "22109"
                        },
                        new
                        {
                            Id = 9,
                            Address = "98615 Moore Ports",
                            City = "D'Amoreborough",
                            CreatedAt = new DateTime(2022, 12, 27, 20, 44, 11, 50, DateTimeKind.Local).AddTicks(8432),
                            Email = "Johnnie15@hotmail.com",
                            IsVerified = false,
                            Latitude = -65.623900000000006,
                            Longitude = 122.1855,
                            Name = "International Integration Agent",
                            Tel = "326.449.4100 x24715",
                            ZipCode = "40562"
                        },
                        new
                        {
                            Id = 10,
                            Address = "609 Fisher Orchard",
                            City = "East Minervaland",
                            CreatedAt = new DateTime(2023, 3, 14, 22, 35, 28, 218, DateTimeKind.Local).AddTicks(9288),
                            Email = "Leonard85@yahoo.com",
                            IsVerified = false,
                            Latitude = 56.336100000000002,
                            Longitude = -73.749899999999997,
                            Name = "District Accounts Supervisor",
                            Tel = "(411) 821-2893",
                            ZipCode = "51766"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 17, 16, 12, 40, 111, DateTimeKind.Local).AddTicks(8930),
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 25, 2, 20, 58, 514, DateTimeKind.Local).AddTicks(8898),
                            Name = "Polestar"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 2, 19, 26, 33, 699, DateTimeKind.Local).AddTicks(3911),
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 6, 8, 44, 14, 353, DateTimeKind.Local).AddTicks(968),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 12, 5, 58, 22, 150, DateTimeKind.Local).AddTicks(2559),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 19, 18, 39, 19, 965, DateTimeKind.Local).AddTicks(6999),
                            Name = "Bentley"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 8, 17, 27, 13, 523, DateTimeKind.Local).AddTicks(3592),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 12, 15, 52, 17, 952, DateTimeKind.Local).AddTicks(7217),
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 5, 10, 37, 28, 138, DateTimeKind.Local).AddTicks(2932),
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 7, 31, 13, 18, 34, 598, DateTimeKind.Local).AddTicks(3964),
                            Name = "Rolls Royce"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 5, 0, 43, 49, 713, DateTimeKind.Local).AddTicks(5935),
                            IdMarque = 5,
                            Image = "https://picsum.photos/640/480/?image=805",
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 25, 12, 30, 11, 313, DateTimeKind.Local).AddTicks(1799),
                            IdMarque = 1,
                            Image = "https://picsum.photos/640/480/?image=826",
                            Name = "Countach"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 15, 7, 2, 53, 151, DateTimeKind.Local).AddTicks(6188),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=789",
                            Name = "Civic"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 2, 12, 25, 22, 726, DateTimeKind.Local).AddTicks(4034),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=703",
                            Name = "Volt"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 5, 7, 37, 6, 974, DateTimeKind.Local).AddTicks(5108),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=482",
                            Name = "Durango"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 28, 21, 42, 50, 51, DateTimeKind.Local).AddTicks(6264),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=651",
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 20, 11, 35, 20, 81, DateTimeKind.Local).AddTicks(7365),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=221",
                            Name = "Model 3"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 2, 28, 14, 12, 20, 619, DateTimeKind.Local).AddTicks(5302),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=392",
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 11, 14, 45, 5, 911, DateTimeKind.Local).AddTicks(4037),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=783",
                            Name = "Ranchero"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 9, 11, 0, 43, 529, DateTimeKind.Local).AddTicks(5532),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=208",
                            Name = "Grand Caravan"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 5, 10, 42, 19, 51, DateTimeKind.Local).AddTicks(5410),
                            Email = "Judy.Padberg@hotmail.com",
                            FirstName = "Precious",
                            IdAgence = 10,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Grady",
                            Password = "$2a$11$GqlhA2FOkAPIeGu2mJZ06uw4KEsbLUhVhcmFEYWijDtxkKtXcKoGy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 22, 8, 40, 54, 842, DateTimeKind.Local).AddTicks(6395),
                            Email = "Clay17@gmail.com",
                            FirstName = "Davin",
                            IdAgence = 7,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Block",
                            Password = "$2a$11$MCUmUrX9O0c4xKSO4QgPfeYBlMSlr504Lk4y8tbisyAz/ETv3Jguu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 3, 17, 18, 24, 498, DateTimeKind.Local).AddTicks(4729),
                            Email = "Rashawn.Bechtelar@gmail.com",
                            FirstName = "Vern",
                            IdAgence = 10,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Hayes",
                            Password = "$2a$11$mmiGqImu8KPFz99VlaRKj.kirRjoBuTy6GXHk4PfZjeauiaGYa5eG"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 11, 14, 2, 54, 434, DateTimeKind.Local).AddTicks(5458),
                            Email = "Murphy_OHara89@yahoo.com",
                            FirstName = "Ashlee",
                            IdAgence = 1,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Rippin",
                            Password = "$2a$11$ECexlam7WEKTTz9VfkNloOIEQeEtylC5hidOz4r8JliPcYx8dPqbC"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 9, 19, 16, 7, 242, DateTimeKind.Local).AddTicks(133),
                            Email = "Gaetano28@gmail.com",
                            FirstName = "Albertha",
                            IdAgence = 6,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Raynor",
                            Password = "$2a$11$3XUJnTNDfuzT2vrumB9yrOFvmXccZC28ielhHK.IS9pgI02TiioWa"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 17, 17, 1, 50, 915, DateTimeKind.Local).AddTicks(9065),
                            Email = "Sharon27@gmail.com",
                            FirstName = "Mckayla",
                            IdAgence = 10,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Spinka",
                            Password = "$2a$11$FVlrf38PnrVvcI3q/WPDYuKrGXQoD.XKh1ccA2cVH80C7lisEC8QW"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 2, 23, 32, 31, 193, DateTimeKind.Local).AddTicks(3950),
                            Email = "Sammie.Hyatt@gmail.com",
                            FirstName = "Geraldine",
                            IdAgence = 4,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Steuber",
                            Password = "$2a$11$SawWwzH/DUIdHQnmwQVTk.u0.hB.7qCgfDCwVk/DnsuAR3VjfnU32"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 17, 20, 40, 21, 962, DateTimeKind.Local).AddTicks(9031),
                            Email = "John_Moore77@yahoo.com",
                            FirstName = "Ardella",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Lindgren",
                            Password = "$2a$11$ECr/0yrQL46ZwNG.DNrTkeJ3WNabFdb7m58eqAYX4bfgVWSVpkQo2"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 6, 15, 11, 40, 48, 29, DateTimeKind.Local).AddTicks(9793),
                            Email = "Lonny63@hotmail.com",
                            FirstName = "Frederic",
                            IdAgence = 3,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Gutkowski",
                            Password = "$2a$11$o2o8MJF6A6I/NuMNYXQ48.1kWpuZXBVPXczEEoXBWA.8Z.WHpD8Ve"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 23, 7, 55, 53, 445, DateTimeKind.Local).AddTicks(162),
                            Email = "Audrey.Ratke@gmail.com",
                            FirstName = "Cecelia",
                            IdAgence = 4,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Ledner",
                            Password = "$2a$11$RhKVYK/pwAUrf1HMqEqrZ.A5SCHbjB7RNinACkjGPKwPLtWDUnRpW"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
