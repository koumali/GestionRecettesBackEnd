// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using automotiveApi.DAL;

#nullable disable

namespace automotive_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("automotiveApi.Models.Agence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("latitude")
                        .HasColumnType("double");

                    b.Property<double>("longitude")
                        .HasColumnType("double");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Agence");
                });

            modelBuilder.Entity("automotiveApi.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("permis_recto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("permis_verso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("automotiveApi.Models.Contrat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_client")
                        .HasColumnType("int");

                    b.Property<int>("id_reservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_client");

                    b.HasIndex("id_reservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("automotiveApi.Models.Marque", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Marques");
                });

            modelBuilder.Entity("automotiveApi.Models.Modele", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Modeles");
                });

            modelBuilder.Entity("automotiveApi.Models.Offre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_debut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_agence")
                        .HasColumnType("int");

                    b.Property<int>("id_vehicule")
                        .HasColumnType("int");

                    b.Property<double>("prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_agence");

                    b.HasIndex("id_vehicule");

                    b.ToTable("Offre");
                });

            modelBuilder.Entity("automotiveApi.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_depart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_retour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_agence")
                        .HasColumnType("int");

                    b.Property<int>("id_vehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_agence");

                    b.HasIndex("id_vehicule");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("automotiveApi.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Admin"
                        },
                        new
                        {
                            id = 2,
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Gerant"
                        },
                        new
                        {
                            id = 3,
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Agent"
                        },
                        new
                        {
                            id = 4,
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Client"
                        });
                });

            modelBuilder.Entity("automotiveApi.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("id_agence")
                        .HasColumnType("int");

                    b.Property<int>("id_role")
                        .HasColumnType("int");

                    b.Property<bool?>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_agence");

                    b.HasIndex("id_role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("automotiveApi.Models.Vehicule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_agence")
                        .HasColumnType("int");

                    b.Property<int>("id_marque")
                        .HasColumnType("int");

                    b.Property<int>("id_modele")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("km")
                        .HasColumnType("int");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nb_passager")
                        .HasColumnType("int");

                    b.Property<int>("nb_port")
                        .HasColumnType("int");

                    b.Property<double>("prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_agence");

                    b.HasIndex("id_marque");

                    b.HasIndex("id_modele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("automotiveApi.Models.log_journal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description_message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name_controller")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name_fonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("automotiveApi.Models.Contrat", b =>
                {
                    b.HasOne("automotiveApi.Models.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("id_client")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("automotiveApi.Models.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("id_reservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("automotiveApi.Models.Offre", b =>
                {
                    b.HasOne("automotiveApi.Models.Agence", "Agnece")
                        .WithMany("Offre")
                        .HasForeignKey("id_agence")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_agence");

                    b.HasOne("automotiveApi.Models.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("id_vehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Agnece");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("automotiveApi.Models.Reservation", b =>
                {
                    b.HasOne("automotiveApi.Models.Agence", "Agence")
                        .WithMany("Reservation")
                        .HasForeignKey("id_agence")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_agence");

                    b.HasOne("automotiveApi.Models.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("id_vehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Agence");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("automotiveApi.Models.User", b =>
                {
                    b.HasOne("automotiveApi.Models.Agence", "agence")
                        .WithMany("Users")
                        .HasForeignKey("id_agence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("automotiveApi.Models.Role", "Role")
                        .WithMany("users")
                        .HasForeignKey("id_role")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Role");

                    b.Navigation("agence");
                });

            modelBuilder.Entity("automotiveApi.Models.Vehicule", b =>
                {
                    b.HasOne("automotiveApi.Models.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("id_agence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("automotiveApi.Models.Marque", "Marque")
                        .WithMany("Vehicules")
                        .HasForeignKey("id_marque")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_marque");

                    b.HasOne("automotiveApi.Models.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("id_modele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Marque");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("automotiveApi.Models.Agence", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");

                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("automotiveApi.Models.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("automotiveApi.Models.Marque", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("automotiveApi.Models.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("automotiveApi.Models.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("automotiveApi.Models.Role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("automotiveApi.Models.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
