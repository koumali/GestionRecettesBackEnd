// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230711154938_added_ispublic_column")]
    partial class added_ispublic_column
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "42357 Adams Way",
                            City = "Chelseafort",
                            CreatedAt = new DateTime(2022, 9, 25, 1, 19, 23, 680, DateTimeKind.Local).AddTicks(6227),
                            Email = "Georgianna.Wisoky6@gmail.com",
                            Latitude = -41.988599999999998,
                            Longitude = -27.675000000000001,
                            Name = "Principal Group Assistant",
                            Tel = "314-819-6083",
                            ZipCode = "84552"
                        },
                        new
                        {
                            Id = 2,
                            Address = "9640 Trantow Meadow",
                            City = "Konopelskifurt",
                            CreatedAt = new DateTime(2022, 8, 13, 8, 47, 54, 724, DateTimeKind.Local).AddTicks(8293),
                            Email = "Tianna86@hotmail.com",
                            Latitude = -54.637700000000002,
                            Longitude = 64.6203,
                            Name = "Forward Factors Strategist",
                            Tel = "1-738-284-9963 x5442",
                            ZipCode = "74382"
                        },
                        new
                        {
                            Id = 3,
                            Address = "3564 Chester Plain",
                            City = "East Albertfurt",
                            CreatedAt = new DateTime(2023, 3, 18, 18, 4, 12, 5, DateTimeKind.Local).AddTicks(9139),
                            Email = "Bertrand.Gutmann63@hotmail.com",
                            Latitude = 77.494900000000001,
                            Longitude = -19.206199999999999,
                            Name = "International Creative Specialist",
                            Tel = "(545) 898-7688",
                            ZipCode = "73125"
                        },
                        new
                        {
                            Id = 4,
                            Address = "28597 Turcotte Fall",
                            City = "New Braxtonport",
                            CreatedAt = new DateTime(2023, 4, 16, 3, 53, 19, 976, DateTimeKind.Local).AddTicks(2191),
                            Email = "Ramona.Pacocha@gmail.com",
                            Latitude = 88.236400000000003,
                            Longitude = -156.1352,
                            Name = "Chief Identity Assistant",
                            Tel = "(927) 527-3006",
                            ZipCode = "50730-9532"
                        },
                        new
                        {
                            Id = 5,
                            Address = "80098 Olson Village",
                            City = "Port Sheridanbury",
                            CreatedAt = new DateTime(2022, 8, 31, 1, 22, 28, 65, DateTimeKind.Local).AddTicks(5047),
                            Email = "Adelbert_Gerlach66@hotmail.com",
                            Latitude = 77.659099999999995,
                            Longitude = -34.9773,
                            Name = "Regional Data Analyst",
                            Tel = "355.453.7251",
                            ZipCode = "48280-9645"
                        },
                        new
                        {
                            Id = 6,
                            Address = "1024 Vandervort Union",
                            City = "East Hudson",
                            CreatedAt = new DateTime(2023, 4, 17, 9, 6, 12, 291, DateTimeKind.Local).AddTicks(6323),
                            Email = "Ignacio1@hotmail.com",
                            Latitude = -8.6000999999999994,
                            Longitude = -155.7364,
                            Name = "Internal Accounts Strategist",
                            Tel = "730-460-6455",
                            ZipCode = "80626-5256"
                        },
                        new
                        {
                            Id = 7,
                            Address = "24076 Wilderman Mission",
                            City = "Rosenbaummouth",
                            CreatedAt = new DateTime(2023, 1, 3, 18, 51, 56, 722, DateTimeKind.Local).AddTicks(2245),
                            Email = "Lenore20@gmail.com",
                            Latitude = -37.361499999999999,
                            Longitude = -148.0334,
                            Name = "Internal Data Developer",
                            Tel = "1-221-997-6310 x3215",
                            ZipCode = "38389-6916"
                        },
                        new
                        {
                            Id = 8,
                            Address = "582 Schumm Flat",
                            City = "Hackettburgh",
                            CreatedAt = new DateTime(2023, 5, 29, 1, 15, 0, 976, DateTimeKind.Local).AddTicks(5533),
                            Email = "Colleen_McClure47@yahoo.com",
                            Latitude = -89.906099999999995,
                            Longitude = -10.010899999999999,
                            Name = "Central Brand Orchestrator",
                            Tel = "(481) 636-0398 x9194",
                            ZipCode = "72350"
                        },
                        new
                        {
                            Id = 9,
                            Address = "166 Fausto Via",
                            City = "Port Horacestad",
                            CreatedAt = new DateTime(2022, 9, 8, 15, 19, 25, 134, DateTimeKind.Local).AddTicks(3806),
                            Email = "Crawford38@yahoo.com",
                            Latitude = 54.662300000000002,
                            Longitude = -57.753500000000003,
                            Name = "Senior Brand Supervisor",
                            Tel = "454-325-1666 x0253",
                            ZipCode = "97108"
                        },
                        new
                        {
                            Id = 10,
                            Address = "889 Afton Ways",
                            City = "South Aryanna",
                            CreatedAt = new DateTime(2022, 7, 11, 20, 54, 24, 361, DateTimeKind.Local).AddTicks(6700),
                            Email = "Cleve.Fay@yahoo.com",
                            Latitude = 54.5471,
                            Longitude = 90.205100000000002,
                            Name = "Principal Optimization Consultant",
                            Tel = "(316) 964-7358 x1228",
                            ZipCode = "98453-3417"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 1, 15, 56, 29, 139, DateTimeKind.Local).AddTicks(2967),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 10, 17, 12, 45, 56, 861, DateTimeKind.Local).AddTicks(4707),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 6, 15, 0, 17, 20, 932, DateTimeKind.Local).AddTicks(9197),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 10, 19, 17, 28, 0, 42, DateTimeKind.Local).AddTicks(3467),
                            Name = "Mercedes Benz"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 9, 14, 11, 38, 56, 902, DateTimeKind.Local).AddTicks(6594),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 6, 23, 3, 0, 51, 370, DateTimeKind.Local).AddTicks(6959),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 23, 22, 36, 55, 965, DateTimeKind.Local).AddTicks(4061),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 15, 12, 50, 28, 78, DateTimeKind.Local).AddTicks(606),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 19, 6, 44, 41, 2, DateTimeKind.Local).AddTicks(9135),
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 11, 21, 3, 59, 47, 541, DateTimeKind.Local).AddTicks(1803),
                            Name = "Ford"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 9, 1, 48, 21, 374, DateTimeKind.Local).AddTicks(4461),
                            IdMarque = 3,
                            Name = "CTS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 25, 15, 53, 50, 75, DateTimeKind.Local).AddTicks(2200),
                            IdMarque = 10,
                            Name = "CTS"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 2, 22, 9, 35, 43, 565, DateTimeKind.Local).AddTicks(528),
                            IdMarque = 9,
                            Name = "Beetle"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 25, 22, 36, 33, 233, DateTimeKind.Local).AddTicks(8708),
                            IdMarque = 9,
                            Name = "Element"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 23, 2, 27, 47, 180, DateTimeKind.Local).AddTicks(5589),
                            IdMarque = 3,
                            Name = "Civic"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 6, 1, 15, 47, 19, 256, DateTimeKind.Local).AddTicks(2390),
                            IdMarque = 3,
                            Name = "Focus"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 2, 5, 8, 42, 21, 648, DateTimeKind.Local).AddTicks(3186),
                            IdMarque = 4,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 5, 10, 14, 50, 495, DateTimeKind.Local).AddTicks(3637),
                            IdMarque = 1,
                            Name = "Spyder"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 6, 20, 14, 35, 31, 72, DateTimeKind.Local).AddTicks(6777),
                            IdMarque = 2,
                            Name = "CX-9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 15, 22, 18, 59, 332, DateTimeKind.Local).AddTicks(5806),
                            IdMarque = 9,
                            Name = "Aventador"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 29, 10, 56, 34, 585, DateTimeKind.Local).AddTicks(1686),
                            Email = "Nash_Kling52@hotmail.com",
                            FirstName = "Chaz",
                            IdAgence = 9,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Feest",
                            Password = "$2a$11$Fy1TVJB.BGkjRN1GWPsaX.9BqhfQT5Q53K0iQYOHRKbo1yR9h450m"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 14, 17, 10, 25, 267, DateTimeKind.Local).AddTicks(490),
                            Email = "Casper.Will@yahoo.com",
                            FirstName = "Jeffrey",
                            IdAgence = 8,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Schuster",
                            Password = "$2a$11$g6Gmc6TZ2Y1LMVhrYeJ4QeqJ92xwSGaLPLgU.tlTgxSRY76e4MZoi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 4, 19, 2, 33, 16, 913, DateTimeKind.Local).AddTicks(4135),
                            Email = "Oswald_Treutel65@hotmail.com",
                            FirstName = "Marilou",
                            IdAgence = 9,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Nader",
                            Password = "$2a$11$S.oUOLowbRREDmP4q9Q0O.xoCjjXtf2I5YbeWfA3d/zY6TOSNPesu"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 2, 17, 22, 5, 52, 145, DateTimeKind.Local).AddTicks(5260),
                            Email = "Verner_Murazik56@hotmail.com",
                            FirstName = "Richmond",
                            IdAgence = 1,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Bogisich",
                            Password = "$2a$11$mnWr6CeoJNsljdWn2sbb0.XtJ2SrF278YGOzwgLUhwI0yjpNXx4zi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 3, 18, 23, 8, 158, DateTimeKind.Local).AddTicks(3083),
                            Email = "Milton.Bradtke2@yahoo.com",
                            FirstName = "Dayna",
                            IdAgence = 9,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Quigley",
                            Password = "$2a$11$EoCqGAlFig90z.oUsy4X9eeFL6g.zZmIQs0Rnn/mbfZr0gnWTaVhW"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 2, 21, 3, 40, 53, 55, DateTimeKind.Local).AddTicks(5560),
                            Email = "Annetta_Donnelly@hotmail.com",
                            FirstName = "Isabell",
                            IdAgence = 5,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Hegmann",
                            Password = "$2a$11$OSNDtsB.2fxzm.B0MkafWuyKchIk2dD7QEHlliQB1HMn0pBz99Pfy"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 19, 7, 57, 40, 374, DateTimeKind.Local).AddTicks(8950),
                            Email = "Elna_Crist99@gmail.com",
                            FirstName = "Alva",
                            IdAgence = 8,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Windler",
                            Password = "$2a$11$elaZSQQ.LUNGI4tHITvx.usdqsoYMQ7LnOnK4YOkFB5dKV2ijIkGS"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 1, 1, 3, 3, 23, 841, DateTimeKind.Local).AddTicks(9832),
                            Email = "Esperanza83@yahoo.com",
                            FirstName = "Sam",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Farrell",
                            Password = "$2a$11$hPy9t5tby2RxRLwVYR.rSuexGWqwmzllqX/B7XsotTMRwhbv8lMym"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 4, 0, 42, 47, 105, DateTimeKind.Local).AddTicks(6377),
                            Email = "Amir.Abernathy14@hotmail.com",
                            FirstName = "Rod",
                            IdAgence = 1,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Krajcik",
                            Password = "$2a$11$t.Elvv4ANg0rSJAQ/ohGa.RwLsj8.FkwI/KbiYOoWm/1oJoSyZjNu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 23, 13, 13, 5, 419, DateTimeKind.Local).AddTicks(1999),
                            Email = "Crawford_Schuppe@gmail.com",
                            FirstName = "Camille",
                            IdAgence = 4,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Wisozk",
                            Password = "$2a$11$29jyucECiIFiLhcul2ycJO/WjnCwwhCS6mPHYHxijB5M2sn1nGvnu"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
