// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230716234043_addNullabilityToAgence")]
    partial class addNullabilityToAgence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "49527 Dach Heights",
                            City = "Lake Alivia",
                            CreatedAt = new DateTime(2022, 9, 6, 14, 59, 33, 623, DateTimeKind.Local).AddTicks(2654),
                            Email = "Reva.Crona@hotmail.com",
                            IsVerified = false,
                            Latitude = -36.463500000000003,
                            Longitude = -14.8604,
                            Name = "Central Accountability Consultant",
                            Tel = "682-513-6606",
                            ZipCode = "46466-0821"
                        },
                        new
                        {
                            Id = 2,
                            Address = "44190 Baumbach Bridge",
                            City = "North Codyberg",
                            CreatedAt = new DateTime(2022, 12, 10, 4, 18, 4, 550, DateTimeKind.Local).AddTicks(9225),
                            Email = "Vincenzo13@yahoo.com",
                            IsVerified = false,
                            Latitude = -82.143699999999995,
                            Longitude = -18.473500000000001,
                            Name = "Dynamic Division Specialist",
                            Tel = "698.803.6839",
                            ZipCode = "21958-7393"
                        },
                        new
                        {
                            Id = 3,
                            Address = "63303 Kreiger Estates",
                            City = "Callieside",
                            CreatedAt = new DateTime(2022, 11, 23, 19, 8, 40, 567, DateTimeKind.Local).AddTicks(2024),
                            Email = "Marcelle70@hotmail.com",
                            IsVerified = false,
                            Latitude = -6.5202,
                            Longitude = -81.136099999999999,
                            Name = "Future Integration Administrator",
                            Tel = "892-291-1844",
                            ZipCode = "94480"
                        },
                        new
                        {
                            Id = 4,
                            Address = "03348 Wilmer Forks",
                            City = "Langview",
                            CreatedAt = new DateTime(2023, 4, 16, 3, 0, 0, 342, DateTimeKind.Local).AddTicks(9833),
                            Email = "Arlene_Schaefer0@hotmail.com",
                            IsVerified = false,
                            Latitude = -52.659700000000001,
                            Longitude = -147.1429,
                            Name = "Dynamic Research Coordinator",
                            Tel = "1-990-686-0263 x4668",
                            ZipCode = "24406-6088"
                        },
                        new
                        {
                            Id = 5,
                            Address = "870 Sabina Courts",
                            City = "Moenshire",
                            CreatedAt = new DateTime(2023, 2, 1, 4, 53, 9, 27, DateTimeKind.Local).AddTicks(3147),
                            Email = "Melyna75@yahoo.com",
                            IsVerified = false,
                            Latitude = -55.2624,
                            Longitude = -103.18600000000001,
                            Name = "Internal Mobility Specialist",
                            Tel = "(699) 949-7808 x117",
                            ZipCode = "11917-2256"
                        },
                        new
                        {
                            Id = 6,
                            Address = "5032 Spencer Point",
                            City = "South Alysaburgh",
                            CreatedAt = new DateTime(2022, 10, 10, 2, 52, 8, 107, DateTimeKind.Local).AddTicks(8721),
                            Email = "Brandyn.Luettgen73@hotmail.com",
                            IsVerified = false,
                            Latitude = 85.012600000000006,
                            Longitude = -147.738,
                            Name = "Principal Directives Administrator",
                            Tel = "(683) 675-8169 x5487",
                            ZipCode = "27191-0056"
                        },
                        new
                        {
                            Id = 7,
                            Address = "27579 Walsh Mill",
                            City = "Lake Santos",
                            CreatedAt = new DateTime(2023, 2, 22, 17, 44, 3, 922, DateTimeKind.Local).AddTicks(9375),
                            Email = "Devan54@hotmail.com",
                            IsVerified = false,
                            Latitude = 61.027099999999997,
                            Longitude = -166.2268,
                            Name = "Principal Infrastructure Director",
                            Tel = "747.674.4408 x2807",
                            ZipCode = "48700-5248"
                        },
                        new
                        {
                            Id = 8,
                            Address = "3275 Schmidt Plaza",
                            City = "Erdmanhaven",
                            CreatedAt = new DateTime(2023, 4, 21, 15, 0, 16, 34, DateTimeKind.Local).AddTicks(1068),
                            Email = "Sandra.Blick19@hotmail.com",
                            IsVerified = false,
                            Latitude = 88.787000000000006,
                            Longitude = 119.35590000000001,
                            Name = "Corporate Group Analyst",
                            Tel = "933-996-8428 x80542",
                            ZipCode = "60642-8105"
                        },
                        new
                        {
                            Id = 9,
                            Address = "2828 Yvette Falls",
                            City = "New Eldonville",
                            CreatedAt = new DateTime(2023, 3, 20, 16, 10, 5, 856, DateTimeKind.Local).AddTicks(6380),
                            Email = "Tanner_Kassulke@hotmail.com",
                            IsVerified = false,
                            Latitude = -50.179000000000002,
                            Longitude = -34.701300000000003,
                            Name = "Future Infrastructure Designer",
                            Tel = "778.483.5509 x0145",
                            ZipCode = "16578"
                        },
                        new
                        {
                            Id = 10,
                            Address = "132 Lavonne Mountain",
                            City = "Kossburgh",
                            CreatedAt = new DateTime(2023, 6, 21, 8, 18, 50, 809, DateTimeKind.Local).AddTicks(5177),
                            Email = "Judd.Homenick@yahoo.com",
                            IsVerified = false,
                            Latitude = 60.574199999999998,
                            Longitude = 167.61279999999999,
                            Name = "Direct Quality Administrator",
                            Tel = "585.378.7443",
                            ZipCode = "95140"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 11, 11, 14, 39, 587, DateTimeKind.Local).AddTicks(2217),
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 24, 7, 10, 48, 834, DateTimeKind.Local).AddTicks(7035),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 6, 8, 59, 7, 754, DateTimeKind.Local).AddTicks(4432),
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 14, 23, 52, 46, 846, DateTimeKind.Local).AddTicks(4081),
                            Name = "Maserati"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 13, 23, 10, 41, 538, DateTimeKind.Local).AddTicks(6252),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 28, 23, 37, 39, 66, DateTimeKind.Local).AddTicks(5252),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 2, 22, 23, 35, 961, DateTimeKind.Local).AddTicks(2867),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 6, 3, 8, 49, 51, 638, DateTimeKind.Local).AddTicks(20),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 12, 2, 54, 20, 2, DateTimeKind.Local).AddTicks(4142),
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 16, 20, 46, 7, 22, DateTimeKind.Local).AddTicks(8447),
                            Name = "Kia"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 19, 17, 35, 13, 852, DateTimeKind.Local).AddTicks(4638),
                            IdMarque = 9,
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 21, 11, 9, 27, 30, DateTimeKind.Local).AddTicks(4323),
                            IdMarque = 1,
                            Name = "1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 12, 6, 17, 3, 608, DateTimeKind.Local).AddTicks(9090),
                            IdMarque = 1,
                            Name = "Corvette"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 27, 6, 20, 4, 346, DateTimeKind.Local).AddTicks(3280),
                            IdMarque = 10,
                            Name = "Camaro"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 26, 23, 5, 19, 361, DateTimeKind.Local).AddTicks(6097),
                            IdMarque = 8,
                            Name = "Grand Caravan"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 8, 14, 35, 28, 761, DateTimeKind.Local).AddTicks(3324),
                            IdMarque = 4,
                            Name = "Corvette"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 2, 17, 16, 8, 44, 408, DateTimeKind.Local).AddTicks(4482),
                            IdMarque = 2,
                            Name = "Corvette"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 9, 3, 1, 45, 6, 967, DateTimeKind.Local).AddTicks(7601),
                            IdMarque = 9,
                            Name = "Mustang"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 4, 16, 18, 7, 44, 136, DateTimeKind.Local).AddTicks(2470),
                            IdMarque = 1,
                            Name = "Focus"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 29, 6, 40, 5, 710, DateTimeKind.Local).AddTicks(3722),
                            IdMarque = 7,
                            Name = "Model T"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 17, 22, 50, 38, 950, DateTimeKind.Local).AddTicks(4188),
                            Email = "Nigel68@yahoo.com",
                            FirstName = "Jaron",
                            IdAgence = 5,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Morar",
                            Password = "$2a$11$c6JANRBhJXZf7RpwacBcQODj3JckGmxc/V6GAOCKgv24xYnQ09Cqy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 16, 5, 1, 41, 476, DateTimeKind.Local).AddTicks(3911),
                            Email = "Flavie_Leuschke16@hotmail.com",
                            FirstName = "Rosetta",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Bailey",
                            Password = "$2a$11$u7ND5Qb3BqfbghYfu35wMOjlfidodvwiKIa108ajR6LSEwNAVLCmq"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 29, 16, 16, 21, 122, DateTimeKind.Local).AddTicks(3060),
                            Email = "Geovanny64@hotmail.com",
                            FirstName = "Brando",
                            IdAgence = 5,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Lockman",
                            Password = "$2a$11$owoMwCZJJQuA9VAEv799uegthUAh7QHrrbj0AykpUwWmQoWyh48Nq"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 27, 4, 8, 10, 892, DateTimeKind.Local).AddTicks(5159),
                            Email = "Consuelo_Grady@yahoo.com",
                            FirstName = "Nya",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Borer",
                            Password = "$2a$11$A0F6yxSm426JyQg.lEDGDOB47Ki0HctGGsXpvfHb41l4JYNp5MXEe"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 27, 6, 8, 5, 489, DateTimeKind.Local).AddTicks(9791),
                            Email = "Kayleigh.Heaney15@gmail.com",
                            FirstName = "Orpha",
                            IdAgence = 10,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Hilpert",
                            Password = "$2a$11$cxies/kf4xJN67wyCCSaRuJzCSsHTdpleFP5GsE4f7M.BCsbLZsNi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 21, 0, 30, 12, 365, DateTimeKind.Local).AddTicks(6480),
                            Email = "Tristin.Schinner@yahoo.com",
                            FirstName = "Onie",
                            IdAgence = 8,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Keeling",
                            Password = "$2a$11$GuINn4ucQUL6yoxsZnl8GuOR9k/u4jIpI9JL8/.I9wvxb5LcFusZq"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 9, 7, 51, 18, 366, DateTimeKind.Local).AddTicks(9756),
                            Email = "Prudence.Von@gmail.com",
                            FirstName = "Judd",
                            IdAgence = 4,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Orn",
                            Password = "$2a$11$sKJ8lIo7zBgb6RDfDgvhFea/YsCyuuTjDdKvhxn1ytoXuNXzsBISW"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 4, 2, 14, 59, 39, DateTimeKind.Local).AddTicks(7937),
                            Email = "Joey.Crist22@gmail.com",
                            FirstName = "Aaliyah",
                            IdAgence = 7,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Volkman",
                            Password = "$2a$11$NchGJo7GmZtiKsBeU616veivhmn0SZBKXZZPZ/Eb0hZs6GNsRpfd."
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 3, 10, 2, 42, 33, 792, DateTimeKind.Local).AddTicks(4939),
                            Email = "Shawna.Gorczany28@yahoo.com",
                            FirstName = "Osbaldo",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Cormier",
                            Password = "$2a$11$qk..2yumsGb1c.sMeBxdXufPlrneSeuC67MPuKOFkFSKXDfIiBulu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 5, 16, 9, 10, 15, 507, DateTimeKind.Local).AddTicks(9082),
                            Email = "Danielle_Bergstrom@gmail.com",
                            FirstName = "Sam",
                            IdAgence = 8,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Kertzmann",
                            Password = "$2a$11$CgAtJfGepc13wgPFkLBJNuzOjyWr7LKwzW3pfLWyLduORj0/ewYeC"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
