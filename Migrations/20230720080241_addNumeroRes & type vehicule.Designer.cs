// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720080241_addNumeroRes & type vehicule")]
    partial class addNumeroRestypevehicule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "02345 Buddy Extension",
                            City = "Clemensside",
                            CreatedAt = new DateTime(2023, 3, 14, 16, 34, 44, 546, DateTimeKind.Local).AddTicks(5700),
                            Email = "Lia25@hotmail.com",
                            IsVerified = false,
                            Latitude = -37.971699999999998,
                            Longitude = 134.755,
                            Name = "Regional Configuration Agent",
                            Tel = "293-234-2937 x5445",
                            ZipCode = "01803"
                        },
                        new
                        {
                            Id = 2,
                            Address = "097 Beverly Station",
                            City = "East Leopold",
                            CreatedAt = new DateTime(2023, 3, 17, 13, 22, 2, 177, DateTimeKind.Local).AddTicks(4806),
                            Email = "Luisa_Kozey61@gmail.com",
                            IsVerified = false,
                            Latitude = -83.804500000000004,
                            Longitude = 151.42060000000001,
                            Name = "Legacy Group Orchestrator",
                            Tel = "1-754-968-6448",
                            ZipCode = "18382"
                        },
                        new
                        {
                            Id = 3,
                            Address = "5243 Julian Creek",
                            City = "Maureenbury",
                            CreatedAt = new DateTime(2022, 10, 30, 11, 16, 13, 896, DateTimeKind.Local).AddTicks(1760),
                            Email = "Malvina59@yahoo.com",
                            IsVerified = false,
                            Latitude = 59.216799999999999,
                            Longitude = -31.1814,
                            Name = "Lead Functionality Coordinator",
                            Tel = "(758) 951-4900 x9167",
                            ZipCode = "33670"
                        },
                        new
                        {
                            Id = 4,
                            Address = "5163 Orie Unions",
                            City = "West Verla",
                            CreatedAt = new DateTime(2023, 1, 9, 7, 54, 29, 209, DateTimeKind.Local).AddTicks(7360),
                            Email = "Eda_Bailey24@hotmail.com",
                            IsVerified = false,
                            Latitude = -8.2265999999999995,
                            Longitude = 73.871799999999993,
                            Name = "Internal Accounts Agent",
                            Tel = "233-288-4849",
                            ZipCode = "79337"
                        },
                        new
                        {
                            Id = 5,
                            Address = "0776 Victor Plaza",
                            City = "Port Erik",
                            CreatedAt = new DateTime(2023, 1, 29, 8, 37, 15, 71, DateTimeKind.Local).AddTicks(329),
                            Email = "Alejandra_Medhurst@hotmail.com",
                            IsVerified = false,
                            Latitude = 78.331900000000005,
                            Longitude = 7.6292,
                            Name = "Direct Accountability Director",
                            Tel = "646-930-0876 x5618",
                            ZipCode = "85288-2260"
                        },
                        new
                        {
                            Id = 6,
                            Address = "3545 Delphine Junction",
                            City = "North Torrey",
                            CreatedAt = new DateTime(2023, 1, 30, 0, 53, 46, 842, DateTimeKind.Local).AddTicks(5207),
                            Email = "April52@gmail.com",
                            IsVerified = false,
                            Latitude = 70.183899999999994,
                            Longitude = 9.0546000000000006,
                            Name = "District Accountability Facilitator",
                            Tel = "1-402-416-9521",
                            ZipCode = "59220-2959"
                        },
                        new
                        {
                            Id = 7,
                            Address = "80637 Hayley Mill",
                            City = "Lake Eunamouth",
                            CreatedAt = new DateTime(2023, 2, 5, 10, 31, 38, 948, DateTimeKind.Local).AddTicks(1332),
                            Email = "Clotilde.Hagenes89@hotmail.com",
                            IsVerified = false,
                            Latitude = 8.4265000000000008,
                            Longitude = -54.054699999999997,
                            Name = "Human Usability Planner",
                            Tel = "741-501-2137 x1676",
                            ZipCode = "03951-4989"
                        },
                        new
                        {
                            Id = 8,
                            Address = "7223 Bartell Canyon",
                            City = "Sylvestershire",
                            CreatedAt = new DateTime(2023, 7, 17, 22, 38, 14, 581, DateTimeKind.Local).AddTicks(2727),
                            Email = "Marge_Feest@yahoo.com",
                            IsVerified = false,
                            Latitude = 36.812199999999997,
                            Longitude = 7.6092000000000004,
                            Name = "District Branding Specialist",
                            Tel = "759-328-2306 x20505",
                            ZipCode = "20119-9575"
                        },
                        new
                        {
                            Id = 9,
                            Address = "342 Velma Roads",
                            City = "North Rickport",
                            CreatedAt = new DateTime(2023, 3, 8, 21, 25, 9, 260, DateTimeKind.Local).AddTicks(7481),
                            Email = "Jacynthe_Monahan@hotmail.com",
                            IsVerified = false,
                            Latitude = 5.7934999999999999,
                            Longitude = 82.649199999999993,
                            Name = "Internal Functionality Architect",
                            Tel = "1-856-750-5839 x93104",
                            ZipCode = "56385-8813"
                        },
                        new
                        {
                            Id = 10,
                            Address = "294 Mylene Pines",
                            City = "New Lysanneberg",
                            CreatedAt = new DateTime(2023, 2, 6, 17, 58, 12, 854, DateTimeKind.Local).AddTicks(9089),
                            Email = "Rashad.Farrell@yahoo.com",
                            IsVerified = false,
                            Latitude = -54.098300000000002,
                            Longitude = 69.399500000000003,
                            Name = "Senior Assurance Executive",
                            Tel = "717.830.2784",
                            ZipCode = "98119-2655"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<bool>("IsConducteur")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.LongTermRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("duree")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("entreprise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("type_vehicule")
                        .HasColumnType("int");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("long_term_rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 21, 8, 10, 57, 101, DateTimeKind.Local).AddTicks(7290),
                            description = "Glover",
                            duree = 2,
                            email = "Rae_Bayer42@gmail.com",
                            entreprise = "Fay LLC",
                            nom = "Taylor",
                            phone = "492.244.0405",
                            prenom = "Kozey",
                            type_vehicule = 1,
                            ville = "Ottoborough",
                            zip = "38664-0623"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 22, 0, 48, 32, 968, DateTimeKind.Local).AddTicks(5158),
                            description = "Hartmann",
                            duree = 3,
                            email = "Katharina_Sipes0@yahoo.com",
                            entreprise = "Luettgen LLC",
                            nom = "Ben",
                            phone = "(425) 329-4223 x96935",
                            prenom = "Douglas",
                            type_vehicule = 1,
                            ville = "East Nickolas",
                            zip = "08226-9278"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 2, 3, 7, 39, 47, 820, DateTimeKind.Local).AddTicks(8611),
                            description = "Considine",
                            duree = 4,
                            email = "Katarina.Ortiz86@yahoo.com",
                            entreprise = "Hayes - Thiel",
                            nom = "Emilie",
                            phone = "(205) 391-9377",
                            prenom = "Crooks",
                            type_vehicule = 1,
                            ville = "Shakiraborough",
                            zip = "85837-3327"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 10, 29, 1, 40, 29, 909, DateTimeKind.Local).AddTicks(193),
                            description = "Kiehn",
                            duree = 5,
                            email = "Gus37@gmail.com",
                            entreprise = "Quigley Inc",
                            nom = "Nona",
                            phone = "(447) 568-6477 x4561",
                            prenom = "Ryan",
                            type_vehicule = 1,
                            ville = "Pourosberg",
                            zip = "14920"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 30, 19, 43, 44, 75, DateTimeKind.Local).AddTicks(1455),
                            description = "Toy",
                            duree = 6,
                            email = "Emory.Gleichner@gmail.com",
                            entreprise = "Altenwerth, Wyman and Kuhn",
                            nom = "Jason",
                            phone = "(374) 752-4846 x71682",
                            prenom = "Nolan",
                            type_vehicule = 1,
                            ville = "Yundthaven",
                            zip = "41601"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 23, 1, 7, 18, 994, DateTimeKind.Local).AddTicks(4191),
                            description = "Kunde",
                            duree = 7,
                            email = "Aiden11@yahoo.com",
                            entreprise = "Kreiger and Sons",
                            nom = "Daphney",
                            phone = "(410) 684-2195 x867",
                            prenom = "Emmerich",
                            type_vehicule = 1,
                            ville = "West Jamel",
                            zip = "94849-6659"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 9, 23, 3, 21, 614, DateTimeKind.Local).AddTicks(6747),
                            description = "Kutch",
                            duree = 8,
                            email = "Rae_Padberg12@gmail.com",
                            entreprise = "Kirlin and Sons",
                            nom = "Paris",
                            phone = "1-581-266-2234",
                            prenom = "Kuvalis",
                            type_vehicule = 1,
                            ville = "Adamschester",
                            zip = "66607"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 8, 0, 25, 52, 988, DateTimeKind.Local).AddTicks(2997),
                            description = "O'Hara",
                            duree = 9,
                            email = "Tanya23@yahoo.com",
                            entreprise = "Kemmer Inc",
                            nom = "Kristopher",
                            phone = "(571) 896-8724",
                            prenom = "Bradtke",
                            type_vehicule = 1,
                            ville = "Lake Karen",
                            zip = "97210"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 5, 19, 20, 28, 27, 294, DateTimeKind.Local).AddTicks(5965),
                            description = "Hickle",
                            duree = 10,
                            email = "Osvaldo34@yahoo.com",
                            entreprise = "Williamson, Russel and Donnelly",
                            nom = "Kurt",
                            phone = "(644) 449-7704 x13595",
                            prenom = "Stokes",
                            type_vehicule = 1,
                            ville = "Granthaven",
                            zip = "75187-1573"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 28, 21, 48, 11, 598, DateTimeKind.Local).AddTicks(4793),
                            description = "Morissette",
                            duree = 11,
                            email = "Clair44@gmail.com",
                            entreprise = "Runolfsdottir - Kuhlman",
                            nom = "Elza",
                            phone = "567.659.6766 x183",
                            prenom = "Rempel",
                            type_vehicule = 1,
                            ville = "Karianemouth",
                            zip = "65130-6902"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 11, 6, 55, 10, 551, DateTimeKind.Local).AddTicks(4309),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 22, 10, 21, 12, 750, DateTimeKind.Local).AddTicks(5972),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 9, 18, 13, 4, 297, DateTimeKind.Local),
                            Name = "Aston Martin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 18, 8, 47, 5, 246, DateTimeKind.Local).AddTicks(5985),
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 2, 17, 46, 15, 240, DateTimeKind.Local).AddTicks(1912),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 5, 13, 9, 46, 261, DateTimeKind.Local).AddTicks(2584),
                            Name = "Mini"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 20, 11, 40, 43, 194, DateTimeKind.Local).AddTicks(5733),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 3, 0, 25, 33, 701, DateTimeKind.Local).AddTicks(5178),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 22, 15, 43, 17, 535, DateTimeKind.Local).AddTicks(2524),
                            Name = "Maserati"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 15, 17, 52, 47, 389, DateTimeKind.Local).AddTicks(8973),
                            Name = "Dodge"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 21, 11, 16, 55, 426, DateTimeKind.Local).AddTicks(5891),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=953",
                            Name = "Grand Caravan"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 10, 4, 18, 41, 36, 490, DateTimeKind.Local).AddTicks(9384),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=537",
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 16, 1, 56, 29, 453, DateTimeKind.Local).AddTicks(3523),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=381",
                            Name = "Aventador"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 10, 16, 16, 36, 20, 194, DateTimeKind.Local).AddTicks(2677),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=795",
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 10, 27, 7, 57, 55, 93, DateTimeKind.Local).AddTicks(7378),
                            IdMarque = 10,
                            Image = "https://picsum.photos/640/480/?image=916",
                            Name = "Camaro"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 7, 9, 51, 42, 626, DateTimeKind.Local).AddTicks(9310),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=298",
                            Name = "Wrangler"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 11, 12, 23, 44, 26, 40, DateTimeKind.Local).AddTicks(638),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=486",
                            Name = "Roadster"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 9, 14, 15, 11, 45, 710, DateTimeKind.Local).AddTicks(6037),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=922",
                            Name = "Grand Cherokee"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 4, 6, 18, 41, 13, 426, DateTimeKind.Local).AddTicks(7249),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=981",
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 12, 13, 36, 39, 396, DateTimeKind.Local).AddTicks(872),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=974",
                            Name = "2"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<string>("NumeroReservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 9, 14, 19, 43, 967, DateTimeKind.Local).AddTicks(1026),
                            Email = "Gerhard.Schultz@yahoo.com",
                            FirstName = "Kayla",
                            IdAgence = 2,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Schumm",
                            Password = "$2a$11$3Dxrn7UFpn.Z8t7Xcg.tEe9ku9s6NrFNWZ.b22FU0jt1A22eFHLOK"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 13, 3, 35, 31, 620, DateTimeKind.Local).AddTicks(817),
                            Email = "Justina84@yahoo.com",
                            FirstName = "Duncan",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Littel",
                            Password = "$2a$11$Bgd89CI5tJlxm92C7ZQqOe9jFLHs.Tbph54bVy3zdM7GjTxdFh5Ie"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 24, 13, 8, 10, 850, DateTimeKind.Local).AddTicks(7977),
                            Email = "Shaun_Runolfsdottir@hotmail.com",
                            FirstName = "Billie",
                            IdAgence = 7,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Balistreri",
                            Password = "$2a$11$z.Z2phh5Bq1t6PyI507sbut0e02doD4D8hhZCgt6LtR9ePgqG7Rni"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 21, 12, 3, 31, 440, DateTimeKind.Local).AddTicks(8556),
                            Email = "Maxwell_Ernser@hotmail.com",
                            FirstName = "Sherman",
                            IdAgence = 7,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "MacGyver",
                            Password = "$2a$11$QoDkdwKMWJsEmI5hMkKDIOWbe3.0L1k/bvOg.WVEsJ72kXdyKkJNu"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 5, 5, 23, 15, 57, 482, DateTimeKind.Local).AddTicks(6911),
                            Email = "Nathanael_Runolfsdottir79@yahoo.com",
                            FirstName = "Pinkie",
                            IdAgence = 6,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Weissnat",
                            Password = "$2a$11$oNPKaw7b2lwR.8QXi.L0NuvKcz2NuiUSGNRclPyrtGgg5BOVFpwaO"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 29, 7, 37, 2, 821, DateTimeKind.Local).AddTicks(6810),
                            Email = "Sabrina.Hane@hotmail.com",
                            FirstName = "Jacinto",
                            IdAgence = 3,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Schuppe",
                            Password = "$2a$11$GcVMqKTT/xWprrlobH/ecezjL8wtJk644gF7MRqpszknXTlzZyi0G"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 16, 17, 51, 50, 491, DateTimeKind.Local).AddTicks(750),
                            Email = "Abagail.Weissnat42@gmail.com",
                            FirstName = "Jessy",
                            IdAgence = 8,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Schulist",
                            Password = "$2a$11$8FviMiYT.MNMfdqJUiBsKO9xrOyABBmfOXgrc7buk.fNqhJTTvUD."
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 1, 12, 19, 43, 43, 455, DateTimeKind.Local).AddTicks(1162),
                            Email = "Dillon.Kub@hotmail.com",
                            FirstName = "Doug",
                            IdAgence = 7,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Pfeffer",
                            Password = "$2a$11$2lM46ODXvBYqjbb6Xv1GzuOxBeBrykbtPnYRBDoFSFfTiu/0Wb6DC"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 5, 12, 13, 19, 7, 319, DateTimeKind.Local).AddTicks(3625),
                            Email = "Jennings_Steuber@hotmail.com",
                            FirstName = "Rick",
                            IdAgence = 3,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Marquardt",
                            Password = "$2a$11$T741uu.07DVTO3TRhhbixeNlQtsSbttZBCC0eLMbKGTJG7ocMcFw6"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 4, 30, 12, 39, 30, 860, DateTimeKind.Local).AddTicks(6018),
                            Email = "Aubrey_Wilkinson@yahoo.com",
                            FirstName = "Mohammed",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Rice",
                            Password = "$2a$11$E4UPohnGm1ftdnZWUxco/O2g2R3lIKsyvHy1OJnYAO2rCxtMoMZlu"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
