// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230712030752_filter_deleted_items")]
    partial class filter_deleted_items
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "755 Swaniawski Path",
                            City = "South Annabellburgh",
                            CreatedAt = new DateTime(2023, 2, 26, 6, 6, 40, 758, DateTimeKind.Local).AddTicks(6428),
                            Email = "Idella75@hotmail.com",
                            Latitude = 12.1572,
                            Longitude = 144.29499999999999,
                            Name = "District Marketing Liaison",
                            Tel = "1-963-246-0604 x799",
                            ZipCode = "40262"
                        },
                        new
                        {
                            Id = 2,
                            Address = "21905 Christiansen Skyway",
                            City = "Katelintown",
                            CreatedAt = new DateTime(2023, 1, 31, 21, 57, 16, 499, DateTimeKind.Local).AddTicks(8766),
                            Email = "Manley_Hane9@hotmail.com",
                            Latitude = -25.9941,
                            Longitude = -175.828,
                            Name = "Global Usability Supervisor",
                            Tel = "1-451-801-2027 x6877",
                            ZipCode = "65865"
                        },
                        new
                        {
                            Id = 3,
                            Address = "4272 Walter Heights",
                            City = "Bettyhaven",
                            CreatedAt = new DateTime(2022, 10, 6, 1, 8, 23, 477, DateTimeKind.Local).AddTicks(3204),
                            Email = "Murl73@yahoo.com",
                            Latitude = 58.849699999999999,
                            Longitude = 52.4069,
                            Name = "Dynamic Marketing Coordinator",
                            Tel = "(970) 872-4332",
                            ZipCode = "80193-1477"
                        },
                        new
                        {
                            Id = 4,
                            Address = "658 Spinka Centers",
                            City = "New Ambrose",
                            CreatedAt = new DateTime(2023, 4, 17, 18, 47, 6, 290, DateTimeKind.Local).AddTicks(7821),
                            Email = "Jazmyne_Padberg@gmail.com",
                            Latitude = 10.9077,
                            Longitude = -153.81049999999999,
                            Name = "Dynamic Applications Officer",
                            Tel = "(734) 416-2760",
                            ZipCode = "81383-1060"
                        },
                        new
                        {
                            Id = 5,
                            Address = "6494 Uriah Place",
                            City = "Manteshire",
                            CreatedAt = new DateTime(2022, 8, 14, 18, 41, 34, 478, DateTimeKind.Local).AddTicks(1373),
                            Email = "Yasmeen16@gmail.com",
                            Latitude = -60.220300000000002,
                            Longitude = -162.2869,
                            Name = "Investor Accountability Coordinator",
                            Tel = "615-936-9975 x62037",
                            ZipCode = "89101"
                        },
                        new
                        {
                            Id = 6,
                            Address = "29368 Larkin Canyon",
                            City = "Spencerton",
                            CreatedAt = new DateTime(2023, 5, 27, 21, 51, 46, 455, DateTimeKind.Local).AddTicks(3057),
                            Email = "Nathanael_Ernser@yahoo.com",
                            Latitude = -58.051000000000002,
                            Longitude = 60.2804,
                            Name = "Regional Factors Executive",
                            Tel = "681-762-6177 x1805",
                            ZipCode = "02780-7174"
                        },
                        new
                        {
                            Id = 7,
                            Address = "46271 Brendan Club",
                            City = "Gilbertside",
                            CreatedAt = new DateTime(2023, 6, 18, 11, 7, 48, 484, DateTimeKind.Local).AddTicks(9375),
                            Email = "Lafayette.Hilll@gmail.com",
                            Latitude = 11.714700000000001,
                            Longitude = -138.32400000000001,
                            Name = "International Configuration Strategist",
                            Tel = "(331) 324-5668",
                            ZipCode = "24940"
                        },
                        new
                        {
                            Id = 8,
                            Address = "76746 Elvera Ways",
                            City = "Rashadfort",
                            CreatedAt = new DateTime(2022, 10, 30, 11, 57, 37, 660, DateTimeKind.Local).AddTicks(207),
                            Email = "Daryl44@gmail.com",
                            Latitude = 60.231400000000001,
                            Longitude = -82.7864,
                            Name = "Forward Directives Specialist",
                            Tel = "350.957.6673 x79991",
                            ZipCode = "54754"
                        },
                        new
                        {
                            Id = 9,
                            Address = "471 Deckow Junctions",
                            City = "Shanelletown",
                            CreatedAt = new DateTime(2023, 2, 14, 4, 15, 50, 292, DateTimeKind.Local).AddTicks(603),
                            Email = "Andreanne25@hotmail.com",
                            Latitude = 82.485600000000005,
                            Longitude = -67.108199999999997,
                            Name = "Investor Operations Technician",
                            Tel = "(496) 439-1998",
                            ZipCode = "00879-1492"
                        },
                        new
                        {
                            Id = 10,
                            Address = "910 Kailey Islands",
                            City = "Hillsberg",
                            CreatedAt = new DateTime(2023, 5, 23, 4, 0, 6, 85, DateTimeKind.Local).AddTicks(253),
                            Email = "Linda.Rice@yahoo.com",
                            Latitude = 61.142400000000002,
                            Longitude = 12.273,
                            Name = "National Data Analyst",
                            Tel = "1-316-663-4172",
                            ZipCode = "46271-2547"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 11, 27, 1, 54, 15, 707, DateTimeKind.Local).AddTicks(9213),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 14, 9, 47, 49, 906, DateTimeKind.Local).AddTicks(5632),
                            Name = "Mercedes Benz"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 24, 8, 50, 12, 355, DateTimeKind.Local).AddTicks(7503),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 14, 3, 10, 26, 922, DateTimeKind.Local).AddTicks(2142),
                            Name = "Jaguar"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 13, 7, 15, 43, 701, DateTimeKind.Local).AddTicks(970),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 6, 17, 3, 4, 15, 704, DateTimeKind.Local).AddTicks(3951),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 12, 20, 17, 34, 579, DateTimeKind.Local).AddTicks(9090),
                            Name = "Maserati"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 2, 25, 21, 18, 38, 651, DateTimeKind.Local).AddTicks(2028),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 13, 15, 12, 6, 446, DateTimeKind.Local).AddTicks(430),
                            Name = "Rolls Royce"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 1, 6, 25, 26, 350, DateTimeKind.Local).AddTicks(7322),
                            Name = "Mini"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 23, 15, 6, 46, 117, DateTimeKind.Local).AddTicks(3087),
                            IdMarque = 5,
                            Name = "CTS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 1, 22, 0, 20, 679, DateTimeKind.Local).AddTicks(4515),
                            IdMarque = 7,
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 26, 7, 1, 16, 373, DateTimeKind.Local).AddTicks(8949),
                            IdMarque = 5,
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 6, 10, 5, 4, 31, 858, DateTimeKind.Local).AddTicks(4132),
                            IdMarque = 6,
                            Name = "Sentra"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 10, 5, 21, 16, 10, 995, DateTimeKind.Local).AddTicks(1515),
                            IdMarque = 4,
                            Name = "Impala"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 8, 25, 3, 43, 55, 108, DateTimeKind.Local).AddTicks(3446),
                            IdMarque = 2,
                            Name = "Escalade"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 21, 10, 37, 23, 919, DateTimeKind.Local).AddTicks(6138),
                            IdMarque = 4,
                            Name = "CTS"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 18, 22, 44, 41, 319, DateTimeKind.Local).AddTicks(2400),
                            IdMarque = 1,
                            Name = "Mustang"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 24, 20, 36, 52, 183, DateTimeKind.Local).AddTicks(7856),
                            IdMarque = 6,
                            Name = "Fiesta"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 17, 16, 43, 9, 0, DateTimeKind.Local).AddTicks(9221),
                            IdMarque = 3,
                            Name = "Aventador"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 15, 17, 52, 2, 738, DateTimeKind.Local).AddTicks(6342),
                            Email = "Mellie7@yahoo.com",
                            FirstName = "Amara",
                            IdAgence = 4,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Kuhic",
                            Password = "$2a$11$gDZsrLc/ZtDdKjw9/5QMte1qvkcLts58pEuX1f/LQ3dOZNTx.2Evq"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 12, 20, 28, 21, 849, DateTimeKind.Local).AddTicks(1607),
                            Email = "Braeden.Christiansen2@gmail.com",
                            FirstName = "Tia",
                            IdAgence = 7,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Nicolas",
                            Password = "$2a$11$ZFwlfL9i9WSVzKo8felosuRe4Xew5VRGFPPT0j2WcduduNU5G/za6"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 13, 9, 14, 58, 129, DateTimeKind.Local).AddTicks(639),
                            Email = "Robert.Herman86@gmail.com",
                            FirstName = "Felipa",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Barton",
                            Password = "$2a$11$OeiEf/KCZspNqYHufJaMM.6wEZmYXp01MUbhP6E3s/iuGXsMEW3IK"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 25, 10, 13, 31, 322, DateTimeKind.Local).AddTicks(6957),
                            Email = "Vaughn.Hickle42@gmail.com",
                            FirstName = "Wilton",
                            IdAgence = 7,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Ebert",
                            Password = "$2a$11$92VKUg/ZyaENaimHgdaZV.nljdkEZPhVZoo7yPJqIOE2w9Oj.gOKK"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 6, 19, 16, 50, 627, DateTimeKind.Local).AddTicks(4863),
                            Email = "Damaris_Okuneva24@hotmail.com",
                            FirstName = "Bulah",
                            IdAgence = 1,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Nikolaus",
                            Password = "$2a$11$4GNfRbzJxDglVp65N55bXOXSRvpwFqzZD1SOq/tFQPBF6JOx02uyi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 6, 30, 9, 42, 36, 62, DateTimeKind.Local).AddTicks(3661),
                            Email = "Maud98@gmail.com",
                            FirstName = "Reggie",
                            IdAgence = 1,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Bernier",
                            Password = "$2a$11$RiOuHpuJe2zQWbJo362l7u6Wde99A4b1FLq/4NeunUpE0hxBxrMLe"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 11, 11, 10, 56, 29, 846, DateTimeKind.Local).AddTicks(3244),
                            Email = "Candida7@hotmail.com",
                            FirstName = "Abraham",
                            IdAgence = 6,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Grimes",
                            Password = "$2a$11$G7Czq4kwpDltjUhrftuRmO.0dEHVTiL2MIIszooCuBckWmD5vyle6"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 2, 10, 17, 2, 59, 418, DateTimeKind.Local).AddTicks(7006),
                            Email = "Kaley.Hammes@gmail.com",
                            FirstName = "Neva",
                            IdAgence = 10,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Kohler",
                            Password = "$2a$11$WsZxji2hPwsOeDd9w4Ki8e9qnS4115L7I7pVnfH/wPpUO0XZ0jazu"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 6, 6, 11, 23, 27, 432, DateTimeKind.Local).AddTicks(9850),
                            Email = "Sandy78@gmail.com",
                            FirstName = "Waylon",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Torp",
                            Password = "$2a$11$iz0aWWo6z0CGMhXOZuuiUeXsVAAqFYEW5zM1Ykir89PpDMf1nTNCu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 3, 17, 51, 22, 593, DateTimeKind.Local).AddTicks(7214),
                            Email = "Freda_Predovic43@gmail.com",
                            FirstName = "Chaim",
                            IdAgence = 1,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Turcotte",
                            Password = "$2a$11$GclBZmm2N8QgR0d993mI1uMVbgGhddiSfu7cdeJDQGsa0bD2MZVfu"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
