// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230716231843_addIsVerifiedToAgence")]
    partial class addIsVerifiedToAgence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "34212 Alba Pine",
                            City = "Smithamborough",
                            CreatedAt = new DateTime(2023, 1, 12, 16, 26, 58, 992, DateTimeKind.Local).AddTicks(9493),
                            Email = "Izabella13@hotmail.com",
                            IsVerified = false,
                            Latitude = -80.509200000000007,
                            Longitude = 145.8767,
                            Name = "Regional Accounts Administrator",
                            Tel = "1-921-466-0912",
                            ZipCode = "45560"
                        },
                        new
                        {
                            Id = 2,
                            Address = "9129 Lamont Mountains",
                            City = "Gislasonburgh",
                            CreatedAt = new DateTime(2023, 3, 23, 3, 5, 37, 263, DateTimeKind.Local).AddTicks(6759),
                            Email = "Theodora.Hand@yahoo.com",
                            IsVerified = false,
                            Latitude = -48.445900000000002,
                            Longitude = 170.64750000000001,
                            Name = "Investor Functionality Consultant",
                            Tel = "(713) 946-5557",
                            ZipCode = "21990-4466"
                        },
                        new
                        {
                            Id = 3,
                            Address = "68653 Waelchi Vista",
                            City = "West Groverhaven",
                            CreatedAt = new DateTime(2023, 1, 25, 8, 46, 49, 704, DateTimeKind.Local).AddTicks(1984),
                            Email = "Darron38@gmail.com",
                            IsVerified = false,
                            Latitude = 51.888100000000001,
                            Longitude = -44.440399999999997,
                            Name = "Dynamic Intranet Specialist",
                            Tel = "201.529.2034 x31694",
                            ZipCode = "72317"
                        },
                        new
                        {
                            Id = 4,
                            Address = "326 Lesch Street",
                            City = "Alberthashire",
                            CreatedAt = new DateTime(2022, 9, 1, 1, 26, 4, 790, DateTimeKind.Local).AddTicks(1880),
                            Email = "Ola_Ferry1@gmail.com",
                            IsVerified = false,
                            Latitude = -56.504600000000003,
                            Longitude = 48.0396,
                            Name = "International Interactions Consultant",
                            Tel = "1-780-429-7890",
                            ZipCode = "32755-9853"
                        },
                        new
                        {
                            Id = 5,
                            Address = "99540 Mellie Motorway",
                            City = "Sandrafurt",
                            CreatedAt = new DateTime(2023, 6, 12, 20, 25, 14, 550, DateTimeKind.Local).AddTicks(156),
                            Email = "Sid25@yahoo.com",
                            IsVerified = false,
                            Latitude = 30.244399999999999,
                            Longitude = -140.99459999999999,
                            Name = "Forward Directives Associate",
                            Tel = "(547) 823-2940",
                            ZipCode = "24892-5671"
                        },
                        new
                        {
                            Id = 6,
                            Address = "8965 Helga Road",
                            City = "Emardmouth",
                            CreatedAt = new DateTime(2022, 12, 2, 16, 43, 41, 211, DateTimeKind.Local).AddTicks(9066),
                            Email = "Vinnie.Kris70@hotmail.com",
                            IsVerified = false,
                            Latitude = -19.171700000000001,
                            Longitude = -26.8064,
                            Name = "Principal Marketing Orchestrator",
                            Tel = "699.870.0596 x80361",
                            ZipCode = "83163"
                        },
                        new
                        {
                            Id = 7,
                            Address = "592 Carmelo Prairie",
                            City = "Prohaskaport",
                            CreatedAt = new DateTime(2023, 4, 14, 22, 1, 49, 166, DateTimeKind.Local).AddTicks(7235),
                            Email = "Murl.Strosin@yahoo.com",
                            IsVerified = false,
                            Latitude = 89.850300000000004,
                            Longitude = 26.8841,
                            Name = "Future Usability Specialist",
                            Tel = "428.205.1293",
                            ZipCode = "97458"
                        },
                        new
                        {
                            Id = 8,
                            Address = "549 Reichel Hollow",
                            City = "New Jasmintown",
                            CreatedAt = new DateTime(2023, 6, 5, 14, 9, 12, 767, DateTimeKind.Local).AddTicks(3559),
                            Email = "Kiana39@hotmail.com",
                            IsVerified = false,
                            Latitude = -47.155999999999999,
                            Longitude = -88.463999999999999,
                            Name = "Investor Assurance Orchestrator",
                            Tel = "884-809-8261 x1741",
                            ZipCode = "23713-6545"
                        },
                        new
                        {
                            Id = 9,
                            Address = "800 Walter Meadows",
                            City = "South Kurtchester",
                            CreatedAt = new DateTime(2023, 7, 1, 12, 23, 44, 946, DateTimeKind.Local).AddTicks(2814),
                            Email = "Gina7@gmail.com",
                            IsVerified = false,
                            Latitude = 21.319099999999999,
                            Longitude = -163.34299999999999,
                            Name = "Customer Data Liaison",
                            Tel = "429-236-7004",
                            ZipCode = "54120"
                        },
                        new
                        {
                            Id = 10,
                            Address = "06088 Bayer Divide",
                            City = "East Ashleigh",
                            CreatedAt = new DateTime(2022, 8, 5, 14, 2, 52, 910, DateTimeKind.Local).AddTicks(1555),
                            Email = "Santina_Mante@yahoo.com",
                            IsVerified = false,
                            Latitude = -69.301100000000005,
                            Longitude = 158.88249999999999,
                            Name = "Direct Branding Technician",
                            Tel = "1-739-497-7236",
                            ZipCode = "25209-7048"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 19, 17, 46, 34, 564, DateTimeKind.Local).AddTicks(1119),
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 2, 22, 7, 21, 37, 144, DateTimeKind.Local).AddTicks(1237),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 20, 22, 13, 34, 550, DateTimeKind.Local).AddTicks(8247),
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 21, 7, 3, 15, 685, DateTimeKind.Local).AddTicks(3920),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 13, 4, 55, 58, 522, DateTimeKind.Local).AddTicks(5215),
                            Name = "Rolls Royce"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 22, 7, 51, 32, 720, DateTimeKind.Local).AddTicks(7460),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 13, 9, 56, 4, 139, DateTimeKind.Local).AddTicks(7335),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 14, 3, 55, 20, 368, DateTimeKind.Local).AddTicks(1215),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 4, 8, 23, 50, 9, 190, DateTimeKind.Local).AddTicks(9942),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 1, 8, 18, 6, 33, 981, DateTimeKind.Local).AddTicks(1456),
                            Name = "Ferrari"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 25, 23, 55, 34, 848, DateTimeKind.Local).AddTicks(194),
                            IdMarque = 9,
                            Name = "Silverado"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 22, 14, 52, 13, 941, DateTimeKind.Local).AddTicks(8187),
                            IdMarque = 5,
                            Name = "Alpine"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 26, 10, 8, 36, 949, DateTimeKind.Local).AddTicks(88),
                            IdMarque = 9,
                            Name = "XC90"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 11, 1, 2, 32, 6, 665, DateTimeKind.Local).AddTicks(3324),
                            IdMarque = 8,
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 3, 29, 2, 59, 13, 269, DateTimeKind.Local).AddTicks(7029),
                            IdMarque = 7,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 21, 22, 15, 23, 436, DateTimeKind.Local).AddTicks(4052),
                            IdMarque = 5,
                            Name = "A8"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 4, 27, 16, 49, 51, 451, DateTimeKind.Local).AddTicks(2581),
                            IdMarque = 5,
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 9, 20, 6, 50, 59, 31, DateTimeKind.Local).AddTicks(6583),
                            IdMarque = 8,
                            Name = "Volt"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 4, 25, 22, 53, 47, 148, DateTimeKind.Local).AddTicks(4103),
                            IdMarque = 10,
                            Name = "Jetta"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 25, 13, 56, 49, 981, DateTimeKind.Local).AddTicks(4364),
                            IdMarque = 4,
                            Name = "Civic"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 19, 1, 42, 51, 295, DateTimeKind.Local).AddTicks(8370),
                            Email = "Donato95@hotmail.com",
                            FirstName = "Lenore",
                            IdAgence = 5,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Botsford",
                            Password = "$2a$11$ng4PeuJBmGJSWvMj/Cz1zO34bKr8hg5y42F.Vz.u12Wv0/Rh0Zz6a"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 29, 9, 30, 34, 437, DateTimeKind.Local).AddTicks(7895),
                            Email = "Gunner_Metz80@gmail.com",
                            FirstName = "Bulah",
                            IdAgence = 4,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Hettinger",
                            Password = "$2a$11$YPG9aY1zeb8EBRO8cdrXpOkz0vAFdAXO1r25Gpwqiyt69t3HI2Sei"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 6, 5, 53, 41, 903, DateTimeKind.Local).AddTicks(3863),
                            Email = "Rosalyn.Kshlerin39@yahoo.com",
                            FirstName = "Felicia",
                            IdAgence = 8,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Leuschke",
                            Password = "$2a$11$GRABlhLlhOe7R3eMkRsy8uUZftShvSzHo/7e9fJS6g/pteMXN7UZi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 30, 7, 14, 48, 900, DateTimeKind.Local).AddTicks(8714),
                            Email = "Floy73@gmail.com",
                            FirstName = "Lela",
                            IdAgence = 6,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Rodriguez",
                            Password = "$2a$11$YSzmyzAvdk.lBbgge4804uW7q.ESSEA.kgoRFIqX/rvK7ecvkfn4W"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 27, 8, 59, 16, 980, DateTimeKind.Local).AddTicks(1273),
                            Email = "Jon82@hotmail.com",
                            FirstName = "Adan",
                            IdAgence = 9,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Mills",
                            Password = "$2a$11$uzam0so6zElurmS26Rls5uYQAy1FjHtb4U4R3v1.jlzHyfeqGP.vi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 9, 5, 0, 0, 44, 118, DateTimeKind.Local).AddTicks(7580),
                            Email = "Coy99@gmail.com",
                            FirstName = "Ryann",
                            IdAgence = 8,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Bosco",
                            Password = "$2a$11$oT/Vc.1BCOU69qQ0P.VP3ON6.v0p3C1WAuArw0lz/8SzIDhRkwGV6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 23, 16, 2, 23, 243, DateTimeKind.Local).AddTicks(1897),
                            Email = "Jodie.Steuber@hotmail.com",
                            FirstName = "Beaulah",
                            IdAgence = 2,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Stracke",
                            Password = "$2a$11$yxEKlBkLCmqqeKNAUekKpuQBs0XCijEyQmbqXGPJ/v/vK5otY6It."
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 10, 18, 45, 24, 489, DateTimeKind.Local).AddTicks(4327),
                            Email = "Corbin.Yundt@hotmail.com",
                            FirstName = "Eddie",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Cremin",
                            Password = "$2a$11$HO9Vu820q4sJDZ9J8T8zJOQKgh5vhVoPbqBVf.fnFkl6g2R0NrVoW"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 15, 14, 25, 33, 310, DateTimeKind.Local).AddTicks(5669),
                            Email = "Lew.Ritchie38@yahoo.com",
                            FirstName = "Ethel",
                            IdAgence = 1,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Hills",
                            Password = "$2a$11$nLmmSv3QW5OePA4kRzD27eG3B8Y6tsW5kCv54ZnIyOY/YXqJjetMS"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 9, 30, 12, 28, 58, 809, DateTimeKind.Local).AddTicks(477),
                            Email = "Gertrude_Leffler@yahoo.com",
                            FirstName = "Rachel",
                            IdAgence = 9,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Jenkins",
                            Password = "$2a$11$nDM7ud/hfeRM.3L7IY/guejoHvqdp/pqXU7E5hfdWuLjheqLj/Vw2"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
