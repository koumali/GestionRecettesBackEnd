// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230715022125_move-image-to-modele")]
    partial class moveimagetomodele
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "713 Lebsack Light",
                            City = "Kossville",
                            CreatedAt = new DateTime(2022, 11, 17, 11, 13, 54, 655, DateTimeKind.Local).AddTicks(5454),
                            Email = "Saige.Mann72@gmail.com",
                            Latitude = -77.758899999999997,
                            Longitude = -6.0167999999999999,
                            Name = "Dynamic Program Orchestrator",
                            Tel = "615-661-3614 x493",
                            ZipCode = "73045-7927"
                        },
                        new
                        {
                            Id = 2,
                            Address = "9919 Bogan Canyon",
                            City = "Rodrigoshire",
                            CreatedAt = new DateTime(2023, 2, 15, 14, 15, 44, 615, DateTimeKind.Local).AddTicks(7552),
                            Email = "Julio.Sawayn90@yahoo.com",
                            Latitude = -80.090299999999999,
                            Longitude = 177.0333,
                            Name = "Global Optimization Architect",
                            Tel = "(685) 395-3096 x824",
                            ZipCode = "85119-1965"
                        },
                        new
                        {
                            Id = 3,
                            Address = "04552 Effertz Freeway",
                            City = "East Jodyfort",
                            CreatedAt = new DateTime(2023, 6, 11, 16, 17, 0, 722, DateTimeKind.Local).AddTicks(2539),
                            Email = "Kenneth78@gmail.com",
                            Latitude = 82.679100000000005,
                            Longitude = 62.373399999999997,
                            Name = "Regional Intranet Supervisor",
                            Tel = "913.730.1971",
                            ZipCode = "66470"
                        },
                        new
                        {
                            Id = 4,
                            Address = "827 Hagenes Springs",
                            City = "Oliverburgh",
                            CreatedAt = new DateTime(2022, 11, 20, 20, 29, 10, 380, DateTimeKind.Local).AddTicks(4466),
                            Email = "Lamar.Wolf45@gmail.com",
                            Latitude = -16.675000000000001,
                            Longitude = -138.3075,
                            Name = "Future Infrastructure Strategist",
                            Tel = "937-656-9277 x27590",
                            ZipCode = "74615-6893"
                        },
                        new
                        {
                            Id = 5,
                            Address = "04205 Al Skyway",
                            City = "Garrickburgh",
                            CreatedAt = new DateTime(2023, 2, 28, 14, 32, 19, 371, DateTimeKind.Local).AddTicks(6888),
                            Email = "Dameon_Johnson55@yahoo.com",
                            Latitude = -29.692499999999999,
                            Longitude = -105.6514,
                            Name = "National Accountability Engineer",
                            Tel = "(265) 222-9365",
                            ZipCode = "81857-8563"
                        },
                        new
                        {
                            Id = 6,
                            Address = "7348 Brielle Rue",
                            City = "Wilfredhaven",
                            CreatedAt = new DateTime(2022, 11, 10, 14, 40, 43, 66, DateTimeKind.Local).AddTicks(2013),
                            Email = "Tressa33@yahoo.com",
                            Latitude = -63.084600000000002,
                            Longitude = 71.602099999999993,
                            Name = "Corporate Group Officer",
                            Tel = "331-942-7477",
                            ZipCode = "72892-7955"
                        },
                        new
                        {
                            Id = 7,
                            Address = "4472 Kiehn Terrace",
                            City = "Dachmouth",
                            CreatedAt = new DateTime(2022, 11, 17, 9, 25, 5, 446, DateTimeKind.Local).AddTicks(6427),
                            Email = "Trever_Steuber43@hotmail.com",
                            Latitude = -3.2469000000000001,
                            Longitude = -105.685,
                            Name = "Legacy Brand Executive",
                            Tel = "830-622-3610 x579",
                            ZipCode = "32278-7903"
                        },
                        new
                        {
                            Id = 8,
                            Address = "2318 Keeling Shoal",
                            City = "Gorczanyview",
                            CreatedAt = new DateTime(2022, 10, 27, 22, 6, 15, 243, DateTimeKind.Local).AddTicks(9971),
                            Email = "Percival_Ankunding@yahoo.com",
                            Latitude = 6.1052,
                            Longitude = -114.95099999999999,
                            Name = "Regional Applications Specialist",
                            Tel = "1-300-577-2407",
                            ZipCode = "02586-5113"
                        },
                        new
                        {
                            Id = 9,
                            Address = "86473 Kub Courts",
                            City = "Hankland",
                            CreatedAt = new DateTime(2022, 7, 16, 6, 46, 29, 127, DateTimeKind.Local).AddTicks(1574),
                            Email = "Sabina39@yahoo.com",
                            Latitude = 19.052299999999999,
                            Longitude = -46.636400000000002,
                            Name = "Global Infrastructure Orchestrator",
                            Tel = "(823) 899-6052",
                            ZipCode = "74141-3349"
                        },
                        new
                        {
                            Id = 10,
                            Address = "225 Tromp Plain",
                            City = "Alexandrinemouth",
                            CreatedAt = new DateTime(2022, 11, 27, 9, 58, 1, 585, DateTimeKind.Local).AddTicks(5064),
                            Email = "Neal.Hayes@gmail.com",
                            Latitude = -2.6968000000000001,
                            Longitude = 91.466300000000004,
                            Name = "National Paradigm Specialist",
                            Tel = "(841) 266-7164",
                            ZipCode = "36378-0419"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 4, 3, 9, 22, 406, DateTimeKind.Local).AddTicks(7144),
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 11, 8, 3, 36, 0, 920, DateTimeKind.Local).AddTicks(8033),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 6, 17, 20, 54, 110, DateTimeKind.Local).AddTicks(6165),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 18, 15, 32, 20, 87, DateTimeKind.Local).AddTicks(7652),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 12, 4, 49, 31, 217, DateTimeKind.Local).AddTicks(8444),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 1, 4, 34, 51, 263, DateTimeKind.Local).AddTicks(921),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 6, 16, 3, 20, 850, DateTimeKind.Local).AddTicks(5934),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 3, 23, 6, 15, 0, 587, DateTimeKind.Local).AddTicks(6771),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 30, 7, 54, 46, 4, DateTimeKind.Local).AddTicks(1281),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 2, 8, 41, 44, 738, DateTimeKind.Local).AddTicks(7625),
                            Name = "Bugatti"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 14, 1, 27, 23, 99, DateTimeKind.Local).AddTicks(8050),
                            IdMarque = 1,
                            Image = "https://picsum.photos/640/480/?image=315",
                            Name = "XTS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 13, 17, 4, 34, 548, DateTimeKind.Local).AddTicks(7973),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=885",
                            Name = "Wrangler"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 16, 18, 28, 3, 383, DateTimeKind.Local).AddTicks(6401),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=375",
                            Name = "Mustang"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 28, 18, 58, 15, 654, DateTimeKind.Local).AddTicks(2360),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=827",
                            Name = "A4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 4, 18, 14, 52, 789, DateTimeKind.Local).AddTicks(7149),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=404",
                            Name = "Beetle"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 12, 1, 5, 30, 39, 855, DateTimeKind.Local).AddTicks(2310),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=40",
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 11, 12, 6, 14, 697, DateTimeKind.Local).AddTicks(3388),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=784",
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 6, 12, 33, 29, 907, DateTimeKind.Local).AddTicks(3615),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=360",
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 9, 17, 18, 22, 21, 58, DateTimeKind.Local).AddTicks(1421),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=62",
                            Name = "Fiesta"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 3, 3, 21, 55, 820, DateTimeKind.Local).AddTicks(2993),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=53",
                            Name = "CTS"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 22, 21, 52, 18, 497, DateTimeKind.Local).AddTicks(426),
                            Email = "Howard.Jakubowski19@hotmail.com",
                            FirstName = "Braulio",
                            IdAgence = 8,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Schulist",
                            Password = "$2a$11$Y9LqetpOY/9RocIs4QCutuKMpXlrI91/lyWRy6Ks.Biwf5cwCErnW"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 12, 16, 46, 51, 359, DateTimeKind.Local).AddTicks(9340),
                            Email = "Aurelio_Cummerata@yahoo.com",
                            FirstName = "Linwood",
                            IdAgence = 5,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Marquardt",
                            Password = "$2a$11$f/RZh4xTBGMpbLsulfNuPOo9gQ0Y5fxgHfgZ1mVOawKxTV7p8ijcS"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 9, 21, 57, 34, 935, DateTimeKind.Local).AddTicks(4669),
                            Email = "Lew.Rippin81@gmail.com",
                            FirstName = "Berry",
                            IdAgence = 2,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Pollich",
                            Password = "$2a$11$mp8V/q8vuskI5MIQBqVSBu7SkaYdAox7GrnRqdOofEmbYN5EXQVj."
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 25, 5, 50, 10, 252, DateTimeKind.Local).AddTicks(6927),
                            Email = "Rosina6@hotmail.com",
                            FirstName = "Kaycee",
                            IdAgence = 4,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Hoeger",
                            Password = "$2a$11$Vx7D6KuiIe2k0IKlHoSu8O5tQIA0jK6y3vdJKhDeTR.PmWosKLttK"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 3, 5, 13, 30, 19, 532, DateTimeKind.Local).AddTicks(3095),
                            Email = "Maximillian.Sauer@hotmail.com",
                            FirstName = "Ernest",
                            IdAgence = 8,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Miller",
                            Password = "$2a$11$4Wz73zWfCSBB7sK4TJ6/IeqSKwGi3DT1AVVWyRFTSLS4U85qAv7iq"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 18, 5, 4, 30, 423, DateTimeKind.Local).AddTicks(734),
                            Email = "Manuela_Leannon50@yahoo.com",
                            FirstName = "Amani",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Connelly",
                            Password = "$2a$11$MrPvHI0nqX3dFyVqgReOlu4AWlhKp.4A0HSbBmNxRXIlbkVkKORLW"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 26, 1, 46, 48, 44, DateTimeKind.Local).AddTicks(6565),
                            Email = "Camryn_Osinski97@yahoo.com",
                            FirstName = "Hassan",
                            IdAgence = 9,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Rolfson",
                            Password = "$2a$11$l4F3pmlnSVWEXdiHon3sTORJHURHoH4PSJT6kAt85SPL6g8k8Mb16"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 16, 20, 25, 26, 656, DateTimeKind.Local).AddTicks(4255),
                            Email = "Marie2@yahoo.com",
                            FirstName = "Chadrick",
                            IdAgence = 8,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Goyette",
                            Password = "$2a$11$MNXsyNZwdWNG0d.8MQe33.Imn8wRKaQITEGau5Ylawph0wStiEn/W"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 11, 10, 2, 51, 209, DateTimeKind.Local).AddTicks(7541),
                            Email = "Webster_Nicolas58@gmail.com",
                            FirstName = "Maxime",
                            IdAgence = 2,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Bechtelar",
                            Password = "$2a$11$G/MJUE5l.fRnfJ.6fQm3E.jU/YGfmVnZ76ftyLdthGsJxWfr.W9Yu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 19, 0, 25, 14, 114, DateTimeKind.Local).AddTicks(856),
                            Email = "Lynn.Wehner@gmail.com",
                            FirstName = "Iliana",
                            IdAgence = 7,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Mayer",
                            Password = "$2a$11$fu6BYrwg3.8c4E1DkuggauS19eFlCPL8kUCyPo7LPu7XHUL6oeWWy"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
