// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230704101939_newMigration")]
    partial class newMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
