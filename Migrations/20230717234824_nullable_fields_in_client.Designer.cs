// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230717234824_nullable_fields_in_client")]
    partial class nullable_fields_in_client
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "19031 Cummerata Valleys",
                            City = "Lukastown",
                            CreatedAt = new DateTime(2022, 7, 26, 3, 16, 18, 171, DateTimeKind.Local).AddTicks(5415),
                            Email = "Sabryna20@hotmail.com",
                            Latitude = 10.7562,
                            Longitude = 109.5213,
                            Name = "Product Usability Specialist",
                            Tel = "843-473-0044 x19945",
                            ZipCode = "74016-0143"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2878 Mae Field",
                            City = "Nicholausport",
                            CreatedAt = new DateTime(2022, 12, 26, 20, 45, 40, 174, DateTimeKind.Local).AddTicks(525),
                            Email = "Jaydon73@hotmail.com",
                            Latitude = 86.797399999999996,
                            Longitude = -165.54679999999999,
                            Name = "Chief Markets Planner",
                            Tel = "(936) 503-7392 x1715",
                            ZipCode = "77564"
                        },
                        new
                        {
                            Id = 3,
                            Address = "841 Elwin Mountain",
                            City = "Runolfsdottirburgh",
                            CreatedAt = new DateTime(2023, 3, 13, 11, 38, 14, 657, DateTimeKind.Local).AddTicks(9448),
                            Email = "Rosemary21@gmail.com",
                            Latitude = -82.856399999999994,
                            Longitude = 107.0355,
                            Name = "Corporate Intranet Administrator",
                            Tel = "655-353-9966",
                            ZipCode = "17068"
                        },
                        new
                        {
                            Id = 4,
                            Address = "91879 Christina Square",
                            City = "Lake Corene",
                            CreatedAt = new DateTime(2023, 1, 20, 23, 49, 27, 881, DateTimeKind.Local).AddTicks(4000),
                            Email = "Coralie93@yahoo.com",
                            Latitude = -27.400300000000001,
                            Longitude = 74.327799999999996,
                            Name = "Human Communications Consultant",
                            Tel = "941-951-5460 x477",
                            ZipCode = "86148"
                        },
                        new
                        {
                            Id = 5,
                            Address = "0713 Kihn Key",
                            City = "West Jalonburgh",
                            CreatedAt = new DateTime(2022, 8, 17, 12, 0, 5, 945, DateTimeKind.Local).AddTicks(5926),
                            Email = "Maybelle.VonRueden@yahoo.com",
                            Latitude = 54.464300000000001,
                            Longitude = -62.989600000000003,
                            Name = "Internal Research Supervisor",
                            Tel = "761-869-7256 x003",
                            ZipCode = "80057"
                        },
                        new
                        {
                            Id = 6,
                            Address = "012 Pollich Isle",
                            City = "Timothystad",
                            CreatedAt = new DateTime(2023, 5, 29, 6, 8, 28, 991, DateTimeKind.Local).AddTicks(1089),
                            Email = "Reyes_Balistreri0@yahoo.com",
                            Latitude = 35.712800000000001,
                            Longitude = -164.02510000000001,
                            Name = "Chief Program Coordinator",
                            Tel = "(695) 969-8173 x42521",
                            ZipCode = "26417"
                        },
                        new
                        {
                            Id = 7,
                            Address = "04641 Kuhic Cliffs",
                            City = "Port Kianna",
                            CreatedAt = new DateTime(2022, 11, 9, 16, 22, 15, 31, DateTimeKind.Local).AddTicks(2984),
                            Email = "Missouri_Hand@gmail.com",
                            Latitude = -1.5061,
                            Longitude = -118.09139999999999,
                            Name = "Direct Research Facilitator",
                            Tel = "(846) 222-0759",
                            ZipCode = "35482-6697"
                        },
                        new
                        {
                            Id = 8,
                            Address = "1663 Trantow Knolls",
                            City = "Selinaton",
                            CreatedAt = new DateTime(2023, 4, 21, 16, 51, 33, 950, DateTimeKind.Local).AddTicks(3537),
                            Email = "Skye_Lubowitz32@gmail.com",
                            Latitude = -77.889700000000005,
                            Longitude = -131.0684,
                            Name = "Central Applications Representative",
                            Tel = "309.918.8859 x40887",
                            ZipCode = "25904-4808"
                        },
                        new
                        {
                            Id = 9,
                            Address = "60899 Nicholaus Divide",
                            City = "West Magnoliaville",
                            CreatedAt = new DateTime(2022, 9, 8, 7, 54, 48, 169, DateTimeKind.Local).AddTicks(6706),
                            Email = "Herman.Sporer@hotmail.com",
                            Latitude = -60.446899999999999,
                            Longitude = 2.6415000000000002,
                            Name = "Regional Accounts Designer",
                            Tel = "1-490-648-1759 x2330",
                            ZipCode = "90503-1101"
                        },
                        new
                        {
                            Id = 10,
                            Address = "12377 Waelchi Greens",
                            City = "Lake Novella",
                            CreatedAt = new DateTime(2023, 3, 30, 8, 0, 34, 188, DateTimeKind.Local).AddTicks(323),
                            Email = "Maximo49@yahoo.com",
                            Latitude = -18.476299999999998,
                            Longitude = 52.676699999999997,
                            Name = "Dynamic Marketing Technician",
                            Tel = "(383) 431-9025 x5941",
                            ZipCode = "07825"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<bool>("IsConducteur")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 26, 21, 22, 20, 444, DateTimeKind.Local).AddTicks(3338),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 25, 21, 5, 23, 282, DateTimeKind.Local).AddTicks(734),
                            Name = "Bentley"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 24, 0, 44, 57, 625, DateTimeKind.Local).AddTicks(8480),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 31, 15, 49, 54, 711, DateTimeKind.Local).AddTicks(8875),
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 10, 18, 19, 13, 40, 79, DateTimeKind.Local).AddTicks(4488),
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 23, 11, 48, 22, 887, DateTimeKind.Local).AddTicks(6668),
                            Name = "Jaguar"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 11, 18, 16, 12, 38, 741, DateTimeKind.Local).AddTicks(5959),
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 10, 19, 2, 50, 931, DateTimeKind.Local).AddTicks(8279),
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 2, 14, 23, 2, 452, DateTimeKind.Local).AddTicks(1316),
                            Name = "Mini"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 1, 8, 20, 2, 23, 42, DateTimeKind.Local).AddTicks(5630),
                            Name = "Polestar"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 20, 6, 39, 32, 245, DateTimeKind.Local).AddTicks(400),
                            IdMarque = 4,
                            Image = "https://picsum.photos/640/480/?image=1057",
                            Name = "Corvette"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 1, 7, 25, 26, 842, DateTimeKind.Local).AddTicks(5958),
                            IdMarque = 5,
                            Image = "https://picsum.photos/640/480/?image=451",
                            Name = "Grand Cherokee"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 16, 23, 55, 43, 438, DateTimeKind.Local).AddTicks(8346),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=995",
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 6, 19, 7, 0, 8, 903, DateTimeKind.Local).AddTicks(8425),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=903",
                            Name = "Cruze"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 3, 8, 6, 43, 14, 588, DateTimeKind.Local).AddTicks(2080),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=1022",
                            Name = "CX-9"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 19, 2, 26, 57, 442, DateTimeKind.Local).AddTicks(8903),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=749",
                            Name = "CX-9"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 1, 17, 10, 58, 52, 88, DateTimeKind.Local).AddTicks(7171),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=885",
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 20, 5, 19, 44, 902, DateTimeKind.Local).AddTicks(4038),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=330",
                            Name = "Land Cruiser"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 9, 17, 11, 14, 23, 252, DateTimeKind.Local).AddTicks(5801),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=346",
                            Name = "Prius"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 11, 28, 1, 14, 37, 796, DateTimeKind.Local).AddTicks(2580),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=123",
                            Name = "Corvette"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 12, 2, 58, 41, 836, DateTimeKind.Local).AddTicks(4151),
                            Email = "Antwan72@gmail.com",
                            FirstName = "Connor",
                            IdAgence = 9,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Dickinson",
                            Password = "$2a$11$GTnLbxsi1JfNnIZVmhV7F.cvnC9FCaWcYyE8/7vhfxzfsy8EW.JJm"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 2, 12, 13, 18, 12, 423, DateTimeKind.Local).AddTicks(3915),
                            Email = "Jamil43@gmail.com",
                            FirstName = "Bernardo",
                            IdAgence = 7,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Hartmann",
                            Password = "$2a$11$uwG4172EoyN/1jfr0W5Q1OMUbXvCTB2pwDaNyvLm6g7..DcmoBtja"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 4, 27, 16, 32, 31, 619, DateTimeKind.Local).AddTicks(4060),
                            Email = "Kip.Johns60@hotmail.com",
                            FirstName = "Sonny",
                            IdAgence = 7,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Tremblay",
                            Password = "$2a$11$kEJSvadXHaex2JS9f3KUl.7rd8pGDU2Xlb.YYy.ZItYdUYmRON46G"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 10, 5, 45, 35, 289, DateTimeKind.Local).AddTicks(3431),
                            Email = "Haylie.Padberg75@gmail.com",
                            FirstName = "Jerrold",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Green",
                            Password = "$2a$11$vmTlYYuxRPvR7iF5D/WBKOwRIgJv3UsLrJel4U6539RPs20i90wEW"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 21, 9, 53, 43, 735, DateTimeKind.Local).AddTicks(4108),
                            Email = "Annabel_Schneider59@yahoo.com",
                            FirstName = "Scottie",
                            IdAgence = 7,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Conn",
                            Password = "$2a$11$KR3DDNOZ6DRwEYiTAQS8uOaIms4RaACuq5otlCJbmP6Fk/x3xHPWi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 2, 11, 28, 24, 654, DateTimeKind.Local).AddTicks(7279),
                            Email = "Kenneth.Collier@gmail.com",
                            FirstName = "Carolyn",
                            IdAgence = 10,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Kautzer",
                            Password = "$2a$11$euG3h/gbDHhn5N.W7KOoUOzFB2uRI1DAszOtktbfuz9py30caul7i"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 2, 11, 12, 5, 8, 363, DateTimeKind.Local).AddTicks(8547),
                            Email = "Branson_Windler44@gmail.com",
                            FirstName = "Carter",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Swift",
                            Password = "$2a$11$H3AQqG.nJitsVmvlN2tIUegdIlvZ22Pyiy2KFGfd0ZFsjGgk9STAq"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 6, 12, 15, 22, 9, 666, DateTimeKind.Local).AddTicks(3944),
                            Email = "Jackeline95@hotmail.com",
                            FirstName = "Bobbie",
                            IdAgence = 2,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Erdman",
                            Password = "$2a$11$KqyXpTIUL6v2fZL/H.CV8.VbRqVItpb7wkEx0y3TjkrABHidzrKcO"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 3, 28, 16, 36, 21, 36, DateTimeKind.Local).AddTicks(7396),
                            Email = "Emil.Altenwerth57@gmail.com",
                            FirstName = "Ophelia",
                            IdAgence = 1,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Reichert",
                            Password = "$2a$11$ETq5EE2erlyzsdILQUs79.fRcT7TiaQB36TchPtmqAmWi8byS9r6G"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 3, 20, 6, 46, 5, 464, DateTimeKind.Local).AddTicks(9559),
                            Email = "Jaylin.Johnston51@gmail.com",
                            FirstName = "Nicolette",
                            IdAgence = 4,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Nienow",
                            Password = "$2a$11$cR1av.1IRraUz5x6RqeyAOaywWCfYmQ0Ch38DhAvnXpN9VLact8Ky"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
