// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230705134242_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "43678 Evert Square",
                            City = "East Fatimastad",
                            CreatedAt = new DateTime(2022, 10, 23, 7, 14, 9, 182, DateTimeKind.Local).AddTicks(4578),
                            Email = "Trystan65@hotmail.com",
                            Latitude = -5.2603999999999997,
                            Longitude = 54.498899999999999,
                            Name = "Future Configuration Orchestrator",
                            Tel = "(681) 395-1896 x79704",
                            ZipCode = "47381-6710"
                        },
                        new
                        {
                            Id = 2,
                            Address = "186 Jewell Ranch",
                            City = "South Justuschester",
                            CreatedAt = new DateTime(2023, 2, 14, 11, 49, 52, 54, DateTimeKind.Local).AddTicks(9599),
                            Email = "Vallie39@gmail.com",
                            Latitude = -2.4176000000000002,
                            Longitude = -69.884200000000007,
                            Name = "Chief Quality Orchestrator",
                            Tel = "1-893-761-4344 x9968",
                            ZipCode = "16145-7143"
                        },
                        new
                        {
                            Id = 3,
                            Address = "688 Mosciski Lock",
                            City = "Kleinport",
                            CreatedAt = new DateTime(2023, 1, 14, 5, 5, 29, 419, DateTimeKind.Local).AddTicks(3915),
                            Email = "Ollie24@hotmail.com",
                            Latitude = -0.36959999999999998,
                            Longitude = 12.352,
                            Name = "Senior Optimization Planner",
                            Tel = "755.282.9459",
                            ZipCode = "78306-1729"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1591 Sporer Knoll",
                            City = "Jermaintown",
                            CreatedAt = new DateTime(2023, 1, 18, 5, 29, 6, 518, DateTimeKind.Local).AddTicks(6497),
                            Email = "Zion87@gmail.com",
                            Latitude = -66.161299999999997,
                            Longitude = 16.4053,
                            Name = "Central Response Officer",
                            Tel = "(248) 841-7755",
                            ZipCode = "65224-8645"
                        },
                        new
                        {
                            Id = 5,
                            Address = "950 Schuster Manors",
                            City = "Lake Vincenzo",
                            CreatedAt = new DateTime(2023, 2, 24, 6, 50, 10, 387, DateTimeKind.Local).AddTicks(6154),
                            Email = "Tate_Tromp@hotmail.com",
                            Latitude = -55.594200000000001,
                            Longitude = -24.770199999999999,
                            Name = "Central Accountability Specialist",
                            Tel = "1-544-599-1405 x6123",
                            ZipCode = "24352"
                        },
                        new
                        {
                            Id = 6,
                            Address = "989 McLaughlin Tunnel",
                            City = "Arianetown",
                            CreatedAt = new DateTime(2022, 9, 9, 16, 5, 2, 353, DateTimeKind.Local).AddTicks(91),
                            Email = "Retha.Krajcik75@hotmail.com",
                            Latitude = -66.605699999999999,
                            Longitude = -20.457999999999998,
                            Name = "Internal Data Analyst",
                            Tel = "909-313-3654 x1799",
                            ZipCode = "97308"
                        },
                        new
                        {
                            Id = 7,
                            Address = "88011 Collins Vista",
                            City = "West Santinoberg",
                            CreatedAt = new DateTime(2022, 12, 25, 21, 14, 49, 508, DateTimeKind.Local).AddTicks(8241),
                            Email = "Francesco.OConnell@hotmail.com",
                            Latitude = -24.0307,
                            Longitude = 90.381500000000003,
                            Name = "National Configuration Coordinator",
                            Tel = "(315) 436-8541 x9400",
                            ZipCode = "49132"
                        },
                        new
                        {
                            Id = 8,
                            Address = "6129 Corkery Points",
                            City = "North Helen",
                            CreatedAt = new DateTime(2022, 12, 14, 17, 47, 21, 473, DateTimeKind.Local).AddTicks(9132),
                            Email = "Stanley.Wisoky@gmail.com",
                            Latitude = -86.257199999999997,
                            Longitude = 10.185700000000001,
                            Name = "Product Research Orchestrator",
                            Tel = "(864) 422-9758",
                            ZipCode = "97637-8114"
                        },
                        new
                        {
                            Id = 9,
                            Address = "391 Cassin Manor",
                            City = "South Darron",
                            CreatedAt = new DateTime(2023, 3, 19, 7, 33, 6, 363, DateTimeKind.Local).AddTicks(2281),
                            Email = "Imani.Thompson8@hotmail.com",
                            Latitude = -83.481999999999999,
                            Longitude = 91.739900000000006,
                            Name = "District Usability Consultant",
                            Tel = "(609) 940-4636 x6903",
                            ZipCode = "83032-2810"
                        },
                        new
                        {
                            Id = 10,
                            Address = "938 Lind Crest",
                            City = "Lake Norene",
                            CreatedAt = new DateTime(2023, 4, 24, 8, 58, 22, 754, DateTimeKind.Local).AddTicks(3717),
                            Email = "Fermin.Cartwright@gmail.com",
                            Latitude = -34.8626,
                            Longitude = 119.5598,
                            Name = "Human Data Assistant",
                            Tel = "(738) 322-4130 x83176",
                            ZipCode = "79722-7331"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 22, 7, 46, 20, 417, DateTimeKind.Local).AddTicks(8521),
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 7, 23, 20, 21, 999, DateTimeKind.Local).AddTicks(3518),
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 23, 14, 29, 35, 511, DateTimeKind.Local).AddTicks(9111),
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 18, 22, 4, 27, 631, DateTimeKind.Local).AddTicks(3149),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 16, 9, 7, 52, 805, DateTimeKind.Local).AddTicks(9050),
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 11, 8, 44, 35, 85, DateTimeKind.Local).AddTicks(1077),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 1, 28, 15, 58, 57, 762, DateTimeKind.Local).AddTicks(6452),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 19, 19, 2, 11, 489, DateTimeKind.Local).AddTicks(6391),
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 20, 18, 28, 42, 497, DateTimeKind.Local).AddTicks(5860),
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 8, 15, 19, 28, 54, 106, DateTimeKind.Local).AddTicks(4186),
                            Name = "Mercedes Benz"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 23, 20, 31, 58, 744, DateTimeKind.Local).AddTicks(2325),
                            IdMarque = 1,
                            Name = "Silverado"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 25, 18, 32, 29, 262, DateTimeKind.Local).AddTicks(5344),
                            IdMarque = 6,
                            Name = "Mercielago"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 19, 4, 24, 16, 761, DateTimeKind.Local).AddTicks(6133),
                            IdMarque = 2,
                            Name = "Spyder"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 11, 10, 42, 32, 261, DateTimeKind.Local).AddTicks(4259),
                            IdMarque = 1,
                            Name = "LeBaron"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 3, 17, 15, 12, 507, DateTimeKind.Local).AddTicks(9890),
                            IdMarque = 9,
                            Name = "Taurus"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 15, 21, 38, 37, 731, DateTimeKind.Local).AddTicks(7191),
                            IdMarque = 10,
                            Name = "Element"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 4, 19, 20, 55, 763, DateTimeKind.Local).AddTicks(4739),
                            IdMarque = 5,
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 9, 18, 39, 13, 533, DateTimeKind.Local).AddTicks(7312),
                            IdMarque = 4,
                            Name = "PT Cruiser"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 26, 0, 45, 27, 821, DateTimeKind.Local).AddTicks(8609),
                            IdMarque = 9,
                            Name = "Countach"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 4, 27, 10, 44, 46, 955, DateTimeKind.Local).AddTicks(6637),
                            IdMarque = 1,
                            Name = "Corvette"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 29, 8, 38, 29, 728, DateTimeKind.Local).AddTicks(8782),
                            Email = "Orpha82@yahoo.com",
                            FirstName = "Jasmin",
                            IdAgence = 6,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Johnston",
                            Password = "$2a$11$NlWHXDWE/haYGwFj5V65XerctPkZlvvF62hRCSpNAvZH1UqZ9fW3e"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 21, 2, 52, 12, 766, DateTimeKind.Local).AddTicks(6179),
                            Email = "Forest99@hotmail.com",
                            FirstName = "Dannie",
                            IdAgence = 8,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Daugherty",
                            Password = "$2a$11$XLl5z3vSL3UewoX6Ifqb4OZcAYeJC9Xtz2p.Klg4RFPVWZl0vXoLa"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 18, 13, 31, 16, 312, DateTimeKind.Local).AddTicks(7606),
                            Email = "Rozella18@yahoo.com",
                            FirstName = "Cooper",
                            IdAgence = 6,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Harvey",
                            Password = "$2a$11$0X6FXH0ne5xeN6LRDZrHvOmn.04DqGYsNVTAjjhZP.OBrdh6bv292"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 31, 7, 25, 32, 241, DateTimeKind.Local).AddTicks(6826),
                            Email = "Diamond60@gmail.com",
                            FirstName = "Angelita",
                            IdAgence = 10,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Hills",
                            Password = "$2a$11$TG34oTlbQxRPiYaARmj3hO5Ewal.lhlresXLtGtkAKL0PziYoqkoG"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 16, 4, 44, 41, 999, DateTimeKind.Local).AddTicks(3588),
                            Email = "Rosemary70@yahoo.com",
                            FirstName = "Hermann",
                            IdAgence = 8,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Simonis",
                            Password = "$2a$11$s4nEI80ALYpD3tu02c7VWeQbntEAmAkYLSIxWXppDg4IU7tR1O5zq"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 2, 9, 15, 32, 83, DateTimeKind.Local).AddTicks(3358),
                            Email = "Louie40@gmail.com",
                            FirstName = "Aurelie",
                            IdAgence = 10,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "White",
                            Password = "$2a$11$REDMdHGx./7ukXavujk4keyQJK3VrfSBaQ1Ii4Wto4ho8mV7I3kbG"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 1, 3, 4, 46, 29, 774, DateTimeKind.Local).AddTicks(7582),
                            Email = "Kendall_Jacobs19@hotmail.com",
                            FirstName = "Alexandrea",
                            IdAgence = 8,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Legros",
                            Password = "$2a$11$q1VEY4mbt.H7NKPYCXKtKOGNsksqhbrFTcsiBqp8zQi1LNBAdSevy"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 11, 19, 20, 43, 140, DateTimeKind.Local).AddTicks(5107),
                            Email = "Oran.Considine93@yahoo.com",
                            FirstName = "Esta",
                            IdAgence = 3,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Armstrong",
                            Password = "$2a$11$n4IDwaLvu3R8ZsBj/2IHBO1ijFgYgErEHkBkrdAQwZujJrP7KNH.y"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 1, 10, 14, 30, 50, 959, DateTimeKind.Local).AddTicks(6243),
                            Email = "Carolanne_Larson37@hotmail.com",
                            FirstName = "Rudolph",
                            IdAgence = 9,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Johnston",
                            Password = "$2a$11$8Cdn66AnxFjowppgaUN7eOFgu.U8pmtL/pmX7NkA9B6RCg/3F/6/K"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 3, 6, 5, 48, 16, 435, DateTimeKind.Local).AddTicks(2631),
                            Email = "Brenda_Spinka@hotmail.com",
                            FirstName = "Vern",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Fahey",
                            Password = "$2a$11$uCYkCy8xZds35rbbrma6dubsdaOK82w5RpfduRRwPp2tejapDEBGG"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
