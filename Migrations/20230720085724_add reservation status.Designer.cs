// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720085724_add reservation status")]
    partial class addreservationstatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "0445 Wellington Parkways",
                            City = "Emardbury",
                            CreatedAt = new DateTime(2022, 11, 1, 15, 17, 55, 349, DateTimeKind.Local).AddTicks(7440),
                            Email = "Ara.Schinner39@hotmail.com",
                            IsVerified = false,
                            Latitude = -60.778399999999998,
                            Longitude = 48.852899999999998,
                            Name = "Human Branding Supervisor",
                            Tel = "(449) 950-4294 x6980",
                            ZipCode = "81689"
                        },
                        new
                        {
                            Id = 2,
                            Address = "766 Maggie Wall",
                            City = "Kinghaven",
                            CreatedAt = new DateTime(2022, 9, 3, 2, 34, 8, 978, DateTimeKind.Local).AddTicks(6942),
                            Email = "Mariah64@hotmail.com",
                            IsVerified = false,
                            Latitude = -33.176499999999997,
                            Longitude = 169.66489999999999,
                            Name = "Investor Factors Officer",
                            Tel = "668.989.2987 x682",
                            ZipCode = "34294"
                        },
                        new
                        {
                            Id = 3,
                            Address = "257 Dicki Turnpike",
                            City = "Ryanhaven",
                            CreatedAt = new DateTime(2023, 4, 2, 21, 41, 25, 921, DateTimeKind.Local).AddTicks(5735),
                            Email = "Elisha93@hotmail.com",
                            IsVerified = false,
                            Latitude = -74.825100000000006,
                            Longitude = -20.726099999999999,
                            Name = "Regional Mobility Strategist",
                            Tel = "995.382.1856 x537",
                            ZipCode = "34051"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1844 Keven Cape",
                            City = "North Chandler",
                            CreatedAt = new DateTime(2022, 10, 24, 15, 5, 22, 579, DateTimeKind.Local).AddTicks(7706),
                            Email = "Celia_Miller32@gmail.com",
                            IsVerified = false,
                            Latitude = -3.6095999999999999,
                            Longitude = 173.8854,
                            Name = "Lead Marketing Developer",
                            Tel = "(248) 994-9686",
                            ZipCode = "47057"
                        },
                        new
                        {
                            Id = 5,
                            Address = "53892 Macejkovic Street",
                            City = "Nicolasmouth",
                            CreatedAt = new DateTime(2022, 10, 14, 18, 24, 23, 614, DateTimeKind.Local).AddTicks(6065),
                            Email = "Madilyn66@gmail.com",
                            IsVerified = false,
                            Latitude = -78.401499999999999,
                            Longitude = -104.4246,
                            Name = "District Directives Orchestrator",
                            Tel = "1-899-962-1265 x79245",
                            ZipCode = "06974-9152"
                        },
                        new
                        {
                            Id = 6,
                            Address = "59226 Heller Cliffs",
                            City = "Larissaview",
                            CreatedAt = new DateTime(2022, 8, 27, 17, 15, 45, 38, DateTimeKind.Local).AddTicks(8927),
                            Email = "Adrien.Spencer@gmail.com",
                            IsVerified = false,
                            Latitude = -89.090699999999998,
                            Longitude = 56.706800000000001,
                            Name = "Corporate Functionality Director",
                            Tel = "1-277-463-9570",
                            ZipCode = "53557-4959"
                        },
                        new
                        {
                            Id = 7,
                            Address = "88010 Vicente Skyway",
                            City = "Lakinville",
                            CreatedAt = new DateTime(2023, 1, 21, 19, 20, 34, 415, DateTimeKind.Local).AddTicks(7251),
                            Email = "Kane.Monahan@hotmail.com",
                            IsVerified = false,
                            Latitude = 87.370900000000006,
                            Longitude = -56.964199999999998,
                            Name = "Direct Configuration Supervisor",
                            Tel = "1-779-261-2752",
                            ZipCode = "52507-3566"
                        },
                        new
                        {
                            Id = 8,
                            Address = "8398 Schoen Lodge",
                            City = "Port Melissaberg",
                            CreatedAt = new DateTime(2022, 11, 4, 23, 19, 55, 746, DateTimeKind.Local).AddTicks(2396),
                            Email = "Jonas75@yahoo.com",
                            IsVerified = false,
                            Latitude = -53.265599999999999,
                            Longitude = -151.2603,
                            Name = "Senior Group Planner",
                            Tel = "540-639-6728 x650",
                            ZipCode = "32907-6003"
                        },
                        new
                        {
                            Id = 9,
                            Address = "152 Cordia Springs",
                            City = "East Isabellview",
                            CreatedAt = new DateTime(2023, 6, 13, 20, 22, 31, 864, DateTimeKind.Local).AddTicks(1821),
                            Email = "Brandy_Nolan48@hotmail.com",
                            IsVerified = false,
                            Latitude = -47.644599999999997,
                            Longitude = 37.328000000000003,
                            Name = "National Accountability Planner",
                            Tel = "1-974-232-2567 x92366",
                            ZipCode = "80202-4340"
                        },
                        new
                        {
                            Id = 10,
                            Address = "06017 Hammes Villages",
                            City = "Pietrostad",
                            CreatedAt = new DateTime(2023, 7, 11, 6, 27, 33, 96, DateTimeKind.Local).AddTicks(3688),
                            Email = "Mallie.Beier63@hotmail.com",
                            IsVerified = false,
                            Latitude = 25.148499999999999,
                            Longitude = 121.9709,
                            Name = "Senior Mobility Consultant",
                            Tel = "1-234-726-0065 x72870",
                            ZipCode = "11854-6772"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<bool>("IsConducteur")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.LongTermRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("duree")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("entreprise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("type_vehicule")
                        .HasColumnType("int");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("long_term_rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 21, 6, 14, 41, 551, DateTimeKind.Local).AddTicks(6145),
                            description = "Boyle",
                            duree = 2,
                            email = "Micah.Ferry92@gmail.com",
                            entreprise = "Kreiger, Grady and Kohler",
                            nom = "Roy",
                            phone = "463.657.0785",
                            prenom = "Schmidt",
                            type_vehicule = 1,
                            ville = "Irvingchester",
                            zip = "51172-8069"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 10, 23, 21, 9, 52, 914, DateTimeKind.Local).AddTicks(3374),
                            description = "Kuhic",
                            duree = 3,
                            email = "Malvina.Kutch@gmail.com",
                            entreprise = "Lehner, O'Kon and McDermott",
                            nom = "Erick",
                            phone = "697-860-8148 x7344",
                            prenom = "Yundt",
                            type_vehicule = 1,
                            ville = "West Holdenmouth",
                            zip = "69062-3382"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 11, 37, 867, DateTimeKind.Local).AddTicks(4976),
                            description = "Bergstrom",
                            duree = 4,
                            email = "Obie_Herzog6@hotmail.com",
                            entreprise = "Schumm Inc",
                            nom = "Winona",
                            phone = "548.926.6884",
                            prenom = "Fritsch",
                            type_vehicule = 1,
                            ville = "Considineburgh",
                            zip = "37898"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 27, 13, 36, 43, 644, DateTimeKind.Local).AddTicks(9223),
                            description = "McGlynn",
                            duree = 5,
                            email = "Shyanne92@yahoo.com",
                            entreprise = "Gerlach Group",
                            nom = "Sylvan",
                            phone = "1-814-658-5861",
                            prenom = "Lebsack",
                            type_vehicule = 1,
                            ville = "Carterstad",
                            zip = "19005"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 27, 13, 13, 12, 599, DateTimeKind.Local).AddTicks(4531),
                            description = "Legros",
                            duree = 6,
                            email = "Jane53@hotmail.com",
                            entreprise = "Sauer - Hettinger",
                            nom = "Madonna",
                            phone = "463.223.9731 x787",
                            prenom = "Bernier",
                            type_vehicule = 1,
                            ville = "Einoborough",
                            zip = "71531-9460"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 11, 7, 25, 53, 889, DateTimeKind.Local).AddTicks(4133),
                            description = "Moen",
                            duree = 7,
                            email = "Domenic.Mitchell@gmail.com",
                            entreprise = "Kiehn - Hilpert",
                            nom = "Berniece",
                            phone = "(951) 766-2999",
                            prenom = "Windler",
                            type_vehicule = 1,
                            ville = "Johnstonton",
                            zip = "80392"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 10, 16, 9, 9, 46, 210, DateTimeKind.Local).AddTicks(4215),
                            description = "Jacobson",
                            duree = 8,
                            email = "Clemmie_Torp89@yahoo.com",
                            entreprise = "Senger, Hyatt and Wilkinson",
                            nom = "Gerry",
                            phone = "(283) 315-7153",
                            prenom = "Donnelly",
                            type_vehicule = 1,
                            ville = "Millstown",
                            zip = "24535-4842"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 1, 9, 7, 6, 12, 670, DateTimeKind.Local).AddTicks(9168),
                            description = "Upton",
                            duree = 9,
                            email = "Fay_Ritchie@hotmail.com",
                            entreprise = "Pagac Group",
                            nom = "Nels",
                            phone = "1-775-341-7315 x1274",
                            prenom = "Howe",
                            type_vehicule = 1,
                            ville = "Darlenemouth",
                            zip = "44108-2399"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 9, 23, 17, 37, 14, 269, DateTimeKind.Local).AddTicks(1838),
                            description = "White",
                            duree = 10,
                            email = "Jarret_McClure@hotmail.com",
                            entreprise = "Mosciski Group",
                            nom = "Jabari",
                            phone = "1-382-301-5104 x9851",
                            prenom = "Connelly",
                            type_vehicule = 1,
                            ville = "West Yasmine",
                            zip = "73821-9683"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 5, 19, 20, 2, 4, 845, DateTimeKind.Local).AddTicks(9931),
                            description = "Yost",
                            duree = 11,
                            email = "Raegan_Crona@hotmail.com",
                            entreprise = "Jacobi - Ferry",
                            nom = "Hadley",
                            phone = "719-709-1527 x56410",
                            prenom = "Howell",
                            type_vehicule = 1,
                            ville = "New Luzburgh",
                            zip = "12850-8674"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 9, 18, 16, 0, 23, 210, DateTimeKind.Local).AddTicks(5005),
                            Name = "Polestar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 25, 10, 41, 23, 384, DateTimeKind.Local).AddTicks(6217),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 21, 13, 6, 146, DateTimeKind.Local).AddTicks(2401),
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 31, 3, 38, 23, 220, DateTimeKind.Local).AddTicks(8180),
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 21, 16, 40, 25, 577, DateTimeKind.Local).AddTicks(2053),
                            Name = "Bugatti"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 3, 13, 23, 24, 9, 64, DateTimeKind.Local).AddTicks(6406),
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 12, 13, 44, 36, 668, DateTimeKind.Local).AddTicks(6700),
                            Name = "Rolls Royce"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 1, 18, 9, 27, 40, 12, DateTimeKind.Local).AddTicks(7885),
                            Name = "Rolls Royce"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 6, 8, 11, 18, 25, 353, DateTimeKind.Local).AddTicks(4129),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 16, 8, 1, 49, 792, DateTimeKind.Local).AddTicks(5482),
                            Name = "BMW"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 2, 23, 5, 33, 41, 97, DateTimeKind.Local).AddTicks(7897),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=721",
                            Name = "El Camino"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 6, 5, 41, 27, 595, DateTimeKind.Local).AddTicks(8695),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=936",
                            Name = "Element"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 11, 3, 8, 22, 8, DateTimeKind.Local).AddTicks(6015),
                            IdMarque = 4,
                            Image = "https://picsum.photos/640/480/?image=131",
                            Name = "Model 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 20, 4, 4, 1, 698, DateTimeKind.Local).AddTicks(5233),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=488",
                            Name = "Alpine"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 28, 10, 14, 57, 524, DateTimeKind.Local).AddTicks(7708),
                            IdMarque = 1,
                            Image = "https://picsum.photos/640/480/?image=49",
                            Name = "2"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 13, 22, 11, 13, 699, DateTimeKind.Local).AddTicks(4456),
                            IdMarque = 4,
                            Image = "https://picsum.photos/640/480/?image=244",
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 11, 10, 5, 47, 24, 761, DateTimeKind.Local).AddTicks(8707),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=200",
                            Name = "Taurus"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 4, 4, 40, 40, 982, DateTimeKind.Local).AddTicks(3333),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=526",
                            Name = "Prius"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 4, 2, 10, 29, 7, 339, DateTimeKind.Local).AddTicks(165),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=1012",
                            Name = "LeBaron"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 3, 18, 2, 16, 8, 498, DateTimeKind.Local).AddTicks(1519),
                            IdMarque = 10,
                            Image = "https://picsum.photos/640/480/?image=56",
                            Name = "Explorer"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<string>("NumeroReservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 6, 12, 33, 13, 801, DateTimeKind.Local).AddTicks(2143),
                            Email = "Deven_Reichert15@gmail.com",
                            FirstName = "Melany",
                            IdAgence = 4,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Murphy",
                            Password = "$2a$11$GViT07o2P.F1ugMqFOZjfeacl6THyDaBzIyrWP9hFIjTNU1s4jBAu"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 14, 16, 0, 4, 491, DateTimeKind.Local).AddTicks(9955),
                            Email = "Benton77@yahoo.com",
                            FirstName = "Kaycee",
                            IdAgence = 3,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Beer",
                            Password = "$2a$11$F6N.A6z0QWN/YM4A9jYDq.Uidt7lSt0Z2gmo7LURjkpwsFImKjJoO"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 14, 9, 58, 26, 278, DateTimeKind.Local).AddTicks(11),
                            Email = "Jennings_Christiansen6@yahoo.com",
                            FirstName = "Kenya",
                            IdAgence = 10,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Bauch",
                            Password = "$2a$11$8QLk0x7pdmvxZarHkKrxuuJB3snUQgEmf/3MIZZfCYIED07K5IvQC"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 19, 1, 46, 18, 102, DateTimeKind.Local).AddTicks(5173),
                            Email = "Tara.Upton@hotmail.com",
                            FirstName = "Joy",
                            IdAgence = 9,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Windler",
                            Password = "$2a$11$8x8D6tmz935J.39IoNjsCO8ZZ28Wl5TrCIZn6BXuczoDdeSpy8KvW"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 10, 10, 11, 22, 51, 968, DateTimeKind.Local).AddTicks(9699),
                            Email = "Icie.McLaughlin@gmail.com",
                            FirstName = "Daija",
                            IdAgence = 1,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Funk",
                            Password = "$2a$11$FXAQ1TwIz84LlcJxUXCUeurjCRiDpUGQnRAH23GLoM5DthD3X9oVK"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 19, 5, 9, 23, 216, DateTimeKind.Local).AddTicks(1025),
                            Email = "Cheyanne84@hotmail.com",
                            FirstName = "Ross",
                            IdAgence = 4,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Boyer",
                            Password = "$2a$11$qQ1pC140z80omwqsxKtRfO2hbYJRd.W6xCPidmPxot5H6CMZpm1wu"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 6, 5, 1, 39, 323, DateTimeKind.Local).AddTicks(8406),
                            Email = "Avis.Kiehn90@gmail.com",
                            FirstName = "Mercedes",
                            IdAgence = 9,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Jakubowski",
                            Password = "$2a$11$mewwBGkk1SZt7nMqzyH.NO9Vsw537OO3w.xz/eoPhyOHVO18NUetS"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 9, 29, 16, 12, 21, 930, DateTimeKind.Local).AddTicks(4863),
                            Email = "Thaddeus.Brakus28@hotmail.com",
                            FirstName = "Taylor",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Braun",
                            Password = "$2a$11$PkhkAc.QnbVTLNgTJZwL9.BS2dA5ry57mrd4Su8vdF2QnSIbNbgya"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 2, 11, 9, 49, 57, 982, DateTimeKind.Local).AddTicks(773),
                            Email = "Jan.OHara@hotmail.com",
                            FirstName = "Pamela",
                            IdAgence = 2,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Gerlach",
                            Password = "$2a$11$PKI2NBn1byzj1J3.hB4EnOi0d740l5Ad0ZxrV4QGYykWRjbHXeQje"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 11, 4, 16, 3, 5, 5, DateTimeKind.Local).AddTicks(5001),
                            Email = "Tyreek_Bradtke1@hotmail.com",
                            FirstName = "Zachary",
                            IdAgence = 6,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Kutch",
                            Password = "$2a$11$a65kqUADhRs.y/kxCqTJAObGacfi1zeEXeIidrBpzJ0qpDl2YclOe"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
