// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230710030815_changed_roles")]
    partial class changed_roles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "369 Dax Divide",
                            City = "Jazminshire",
                            CreatedAt = new DateTime(2022, 9, 20, 8, 43, 29, 280, DateTimeKind.Local).AddTicks(6545),
                            Email = "Abdullah.Steuber34@hotmail.com",
                            Latitude = 81.922600000000003,
                            Longitude = -36.613199999999999,
                            Name = "Global Implementation Executive",
                            Tel = "896-504-1747 x4492",
                            ZipCode = "27519-2896"
                        },
                        new
                        {
                            Id = 2,
                            Address = "11505 Blanda Harbor",
                            City = "North Antoniettaview",
                            CreatedAt = new DateTime(2022, 7, 13, 12, 24, 18, 53, DateTimeKind.Local).AddTicks(2927),
                            Email = "Ottilie69@hotmail.com",
                            Latitude = -68.325999999999993,
                            Longitude = 117.2208,
                            Name = "Legacy Interactions Executive",
                            Tel = "(976) 647-2594",
                            ZipCode = "05707"
                        },
                        new
                        {
                            Id = 3,
                            Address = "64594 Laron Springs",
                            City = "New Brookfort",
                            CreatedAt = new DateTime(2023, 1, 13, 9, 51, 9, 85, DateTimeKind.Local).AddTicks(2558),
                            Email = "Cordell.Hettinger30@yahoo.com",
                            Latitude = -84.044300000000007,
                            Longitude = -143.512,
                            Name = "Internal Configuration Director",
                            Tel = "(643) 746-5063 x916",
                            ZipCode = "79921-5121"
                        },
                        new
                        {
                            Id = 4,
                            Address = "2637 Veronica Rapids",
                            City = "Rodriguezland",
                            CreatedAt = new DateTime(2022, 7, 26, 17, 30, 31, 682, DateTimeKind.Local).AddTicks(7962),
                            Email = "Landen.Harvey41@gmail.com",
                            Latitude = -82.246300000000005,
                            Longitude = -135.06739999999999,
                            Name = "District Web Producer",
                            Tel = "550-855-4586 x8092",
                            ZipCode = "01373"
                        },
                        new
                        {
                            Id = 5,
                            Address = "60789 Abshire Pine",
                            City = "Kaleyhaven",
                            CreatedAt = new DateTime(2022, 8, 24, 4, 2, 39, 21, DateTimeKind.Local).AddTicks(5379),
                            Email = "Kaleigh_Pollich@hotmail.com",
                            Latitude = -59.867400000000004,
                            Longitude = -53.099200000000003,
                            Name = "Dynamic Identity Supervisor",
                            Tel = "511.374.4563 x43983",
                            ZipCode = "21830-2750"
                        },
                        new
                        {
                            Id = 6,
                            Address = "52556 Ella Coves",
                            City = "Brakusside",
                            CreatedAt = new DateTime(2022, 8, 22, 15, 42, 8, 964, DateTimeKind.Local).AddTicks(3261),
                            Email = "Marcellus_Lueilwitz@gmail.com",
                            Latitude = -43.972299999999997,
                            Longitude = 165.5487,
                            Name = "Customer Directives Administrator",
                            Tel = "711-374-8778 x28054",
                            ZipCode = "37418-1460"
                        },
                        new
                        {
                            Id = 7,
                            Address = "78910 Maggio Parkway",
                            City = "Schummton",
                            CreatedAt = new DateTime(2022, 7, 19, 15, 0, 4, 94, DateTimeKind.Local).AddTicks(7473),
                            Email = "Savanna.Schultz@yahoo.com",
                            Latitude = -15.6747,
                            Longitude = 89.360600000000005,
                            Name = "Principal Implementation Facilitator",
                            Tel = "1-399-269-9001 x60634",
                            ZipCode = "46687-0021"
                        },
                        new
                        {
                            Id = 8,
                            Address = "05237 Dexter Fords",
                            City = "Wunschburgh",
                            CreatedAt = new DateTime(2023, 5, 18, 12, 12, 42, 38, DateTimeKind.Local).AddTicks(897),
                            Email = "Rosemarie43@hotmail.com",
                            Latitude = -18.2013,
                            Longitude = -6.3719999999999999,
                            Name = "Dynamic Integration Liaison",
                            Tel = "775-817-5069 x5383",
                            ZipCode = "52606"
                        },
                        new
                        {
                            Id = 9,
                            Address = "497 Bayer Walks",
                            City = "West Meaganbury",
                            CreatedAt = new DateTime(2022, 11, 30, 4, 53, 16, 40, DateTimeKind.Local).AddTicks(4393),
                            Email = "Albina_Wilderman@gmail.com",
                            Latitude = -1.3023,
                            Longitude = 128.6191,
                            Name = "Product Identity Representative",
                            Tel = "889-770-1899 x5736",
                            ZipCode = "76307"
                        },
                        new
                        {
                            Id = 10,
                            Address = "454 Bergstrom Cliff",
                            City = "Hobarttown",
                            CreatedAt = new DateTime(2022, 9, 29, 13, 11, 1, 709, DateTimeKind.Local).AddTicks(902),
                            Email = "Rusty.Oberbrunner@hotmail.com",
                            Latitude = 73.2834,
                            Longitude = 59.385100000000001,
                            Name = "Chief Program Associate",
                            Tel = "(825) 229-2019",
                            ZipCode = "67472-1754"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 14, 5, 41, 41, 234, DateTimeKind.Local).AddTicks(3170),
                            Name = "Bugatti"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 2, 8, 10, 32, 436, DateTimeKind.Local).AddTicks(6056),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 11, 12, 18, 43, 250, DateTimeKind.Local).AddTicks(407),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 10, 27, 10, 32, 48, 635, DateTimeKind.Local).AddTicks(3555),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 24, 0, 29, 2, 255, DateTimeKind.Local).AddTicks(6700),
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 3, 28, 5, 44, 9, 860, DateTimeKind.Local).AddTicks(8289),
                            Name = "Polestar"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 8, 5, 31, 41, 477, DateTimeKind.Local).AddTicks(6331),
                            Name = "Mini"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 5, 27, 19, 47, 39, 565, DateTimeKind.Local).AddTicks(619),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 3, 12, 9, 22, 344, DateTimeKind.Local).AddTicks(6101),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 7, 12, 14, 5, 30, 470, DateTimeKind.Local).AddTicks(4407),
                            Name = "Mercedes Benz"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 5, 0, 5, 35, 511, DateTimeKind.Local).AddTicks(1303),
                            IdMarque = 3,
                            Name = "Corvette"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 20, 5, 6, 25, 934, DateTimeKind.Local).AddTicks(6386),
                            IdMarque = 4,
                            Name = "Alpine"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 2, 10, 18, 51, 29, 647, DateTimeKind.Local).AddTicks(1294),
                            IdMarque = 9,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 11, 18, 7, 12, 30, 346, DateTimeKind.Local).AddTicks(5352),
                            IdMarque = 4,
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 29, 12, 39, 26, 293, DateTimeKind.Local).AddTicks(5964),
                            IdMarque = 3,
                            Name = "Altima"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 2, 21, 12, 25, 3, 543, DateTimeKind.Local).AddTicks(4189),
                            IdMarque = 1,
                            Name = "Jetta"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 4, 29, 7, 32, 36, 919, DateTimeKind.Local).AddTicks(8846),
                            IdMarque = 5,
                            Name = "Fiesta"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 9, 12, 7, 58, 13, 853, DateTimeKind.Local).AddTicks(3544),
                            IdMarque = 4,
                            Name = "CX-9"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 9, 21, 4, 16, 54, 194, DateTimeKind.Local).AddTicks(5582),
                            IdMarque = 3,
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 3, 18, 5, 12, 30, 659, DateTimeKind.Local).AddTicks(9796),
                            IdMarque = 4,
                            Name = "Altima"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 1, 18, 25, 34, 888, DateTimeKind.Local).AddTicks(3204),
                            Email = "Aimee.Walter@gmail.com",
                            FirstName = "Cleora",
                            IdAgence = 1,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Harris",
                            Password = "$2a$11$h3x0CUvYYpaJ7cKFVHf6Zu1sK5DdHWpqGcP6mQ6Y0lCfcpTAIFACe"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 16, 22, 49, 17, 421, DateTimeKind.Local).AddTicks(1872),
                            Email = "Sammie15@hotmail.com",
                            FirstName = "Mireya",
                            IdAgence = 6,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Littel",
                            Password = "$2a$11$1nsL8c9LUMOwFWBWRUPJOOEXLyE3b8yaQlLz.8BzdbW79W/dIFjVu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 4, 1, 10, 49, 17, 954, DateTimeKind.Local).AddTicks(6324),
                            Email = "Miguel45@hotmail.com",
                            FirstName = "Louvenia",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Bruen",
                            Password = "$2a$11$.i1y805toR3p0v8GhWVoaeZAcOScmuK5B0UsfQjgShnt6o76FeVVC"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 6, 18, 26, 31, 371, DateTimeKind.Local).AddTicks(9475),
                            Email = "Selmer.Smitham@yahoo.com",
                            FirstName = "Carter",
                            IdAgence = 4,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Tromp",
                            Password = "$2a$11$OG4WHfrDi02E7ZpHXq3Kre/zNVHbwS.6nbR2RiA9KVUSB.laeLCG2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 23, 0, 24, 55, 813, DateTimeKind.Local).AddTicks(9620),
                            Email = "Luciano83@yahoo.com",
                            FirstName = "Alexis",
                            IdAgence = 2,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Smitham",
                            Password = "$2a$11$8XaHECFoRfIALvmKSXmSmuy0Tolkx36kPP5JUUYfSFsQGh0.gW9km"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 13, 1, 49, 55, 260, DateTimeKind.Local).AddTicks(1848),
                            Email = "Marc_Ondricka@yahoo.com",
                            FirstName = "Elody",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Wehner",
                            Password = "$2a$11$gZdvmrCieGA4kX47vPRSMuX0iEaiD6jnz85JjjrghlVIfvjhPQkoi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 9, 1, 21, 52, 57, 697, DateTimeKind.Local).AddTicks(2015),
                            Email = "Glennie_Hilpert@yahoo.com",
                            FirstName = "German",
                            IdAgence = 9,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Berge",
                            Password = "$2a$11$TTSpvHFIBMKtJzu8zZVKeeoxCa44w99M8Z76X7HyJ/aN893SP7ubm"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 27, 2, 35, 25, 774, DateTimeKind.Local).AddTicks(6385),
                            Email = "Austen_Kassulke@hotmail.com",
                            FirstName = "Trevion",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Klocko",
                            Password = "$2a$11$qHU5hW.Qg0PpZBbqGwMeGOk.81bcZ5G2rMk6C0pmtIgaIg7FF.a1m"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 5, 2, 13, 51, 600, DateTimeKind.Local).AddTicks(3834),
                            Email = "Carolina_Hand@hotmail.com",
                            FirstName = "Gerald",
                            IdAgence = 2,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Frami",
                            Password = "$2a$11$dGuekwSwbLhbdXenXditre5zwie03T0mQJCybpXBQe8vnqBou1q8a"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 23, 8, 34, 56, 167, DateTimeKind.Local).AddTicks(3669),
                            Email = "Freddy76@hotmail.com",
                            FirstName = "Mariana",
                            IdAgence = 8,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Ledner",
                            Password = "$2a$11$sAHtUazdPciX.hH0VyWgbeEnsDuecL2PGPSid.oW710cNZImqw86q"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
