// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230710112511_new_migration")]
    partial class new_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1389 Daniela Canyon",
                            City = "Naderside",
                            CreatedAt = new DateTime(2022, 7, 21, 15, 39, 41, 823, DateTimeKind.Local).AddTicks(4534),
                            Email = "Sam_Weber30@hotmail.com",
                            Latitude = -63.609400000000001,
                            Longitude = -64.438599999999994,
                            Name = "Future Communications Analyst",
                            Tel = "498-533-4602",
                            ZipCode = "64494"
                        },
                        new
                        {
                            Id = 2,
                            Address = "077 Tillman Green",
                            City = "New Tatum",
                            CreatedAt = new DateTime(2022, 12, 1, 18, 11, 2, 41, DateTimeKind.Local).AddTicks(7636),
                            Email = "Courtney_Mills@yahoo.com",
                            Latitude = 66.005099999999999,
                            Longitude = 121.80329999999999,
                            Name = "Regional Assurance Facilitator",
                            Tel = "1-207-876-4613 x399",
                            ZipCode = "42900-0545"
                        },
                        new
                        {
                            Id = 3,
                            Address = "40822 Natalia Cape",
                            City = "Wolffside",
                            CreatedAt = new DateTime(2023, 7, 4, 20, 8, 19, 138, DateTimeKind.Local).AddTicks(428),
                            Email = "Teresa.Morar59@gmail.com",
                            Latitude = -71.002200000000002,
                            Longitude = -1.8561000000000001,
                            Name = "Corporate Web Facilitator",
                            Tel = "1-973-309-7161 x044",
                            ZipCode = "00269"
                        },
                        new
                        {
                            Id = 4,
                            Address = "526 Maryam Junctions",
                            City = "South Candelario",
                            CreatedAt = new DateTime(2022, 8, 24, 15, 50, 35, 705, DateTimeKind.Local).AddTicks(8343),
                            Email = "Haylee.Heidenreich@gmail.com",
                            Latitude = -66.575800000000001,
                            Longitude = -4.5537999999999998,
                            Name = "Regional Optimization Agent",
                            Tel = "861.815.2780",
                            ZipCode = "15199"
                        },
                        new
                        {
                            Id = 5,
                            Address = "93665 Metz Station",
                            City = "South Anne",
                            CreatedAt = new DateTime(2022, 8, 3, 9, 31, 56, 716, DateTimeKind.Local).AddTicks(7619),
                            Email = "Katheryn85@gmail.com",
                            Latitude = -50.9694,
                            Longitude = -142.12129999999999,
                            Name = "International Program Administrator",
                            Tel = "1-450-572-0099",
                            ZipCode = "43387"
                        },
                        new
                        {
                            Id = 6,
                            Address = "531 Effertz Ridge",
                            City = "Emeraldborough",
                            CreatedAt = new DateTime(2022, 8, 15, 14, 9, 22, 432, DateTimeKind.Local).AddTicks(8334),
                            Email = "Adriel.Rau@gmail.com",
                            Latitude = -18.127099999999999,
                            Longitude = -21.066500000000001,
                            Name = "Central Research Agent",
                            Tel = "1-694-264-8801 x647",
                            ZipCode = "89666-7728"
                        },
                        new
                        {
                            Id = 7,
                            Address = "811 Rau Village",
                            City = "East Osborneport",
                            CreatedAt = new DateTime(2022, 12, 21, 12, 35, 54, 716, DateTimeKind.Local).AddTicks(2911),
                            Email = "Allie72@yahoo.com",
                            Latitude = -68.163499999999999,
                            Longitude = -176.05179999999999,
                            Name = "Principal Division Associate",
                            Tel = "1-473-962-4358",
                            ZipCode = "49620"
                        },
                        new
                        {
                            Id = 8,
                            Address = "642 Ulises Pine",
                            City = "New Leone",
                            CreatedAt = new DateTime(2023, 1, 30, 4, 51, 47, 891, DateTimeKind.Local).AddTicks(48),
                            Email = "Coleman.Hirthe@gmail.com",
                            Latitude = -33.340699999999998,
                            Longitude = -65.327500000000001,
                            Name = "Internal Brand Producer",
                            Tel = "632.496.7293",
                            ZipCode = "29758"
                        },
                        new
                        {
                            Id = 9,
                            Address = "22090 Vance Ports",
                            City = "Zboncakshire",
                            CreatedAt = new DateTime(2023, 7, 8, 16, 51, 35, 385, DateTimeKind.Local).AddTicks(9269),
                            Email = "Kristy83@gmail.com",
                            Latitude = -57.288400000000003,
                            Longitude = 145.37459999999999,
                            Name = "Lead Integration Executive",
                            Tel = "386.799.5531 x2999",
                            ZipCode = "53814"
                        },
                        new
                        {
                            Id = 10,
                            Address = "74996 Pearline Garden",
                            City = "Lake Briannemouth",
                            CreatedAt = new DateTime(2023, 3, 23, 0, 18, 33, 516, DateTimeKind.Local).AddTicks(4105),
                            Email = "Jocelyn.Daniel@hotmail.com",
                            Latitude = -77.465999999999994,
                            Longitude = 9.1988000000000003,
                            Name = "Customer Applications Officer",
                            Tel = "(538) 935-8365 x7564",
                            ZipCode = "98905-7016"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 5, 21, 11, 10, 605, DateTimeKind.Local).AddTicks(8619),
                            Name = "Bentley"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 9, 2, 23, 53, 968, DateTimeKind.Local).AddTicks(1827),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 31, 3, 7, 7, 388, DateTimeKind.Local).AddTicks(5661),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 30, 18, 25, 26, 88, DateTimeKind.Local).AddTicks(5097),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 3, 15, 9, 41, 969, DateTimeKind.Local).AddTicks(8491),
                            Name = "Rolls Royce"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 26, 8, 21, 38, 128, DateTimeKind.Local).AddTicks(9283),
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 2, 5, 7, 28, 47, 106, DateTimeKind.Local).AddTicks(7440),
                            Name = "Aston Martin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 20, 5, 52, 30, 804, DateTimeKind.Local).AddTicks(7273),
                            Name = "Bentley"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 28, 15, 45, 19, 707, DateTimeKind.Local).AddTicks(6089),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 1, 10, 7, 13, 3, 640, DateTimeKind.Local).AddTicks(3989),
                            Name = "Tesla"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 7, 18, 55, 49, 194, DateTimeKind.Local).AddTicks(8931),
                            IdMarque = 8,
                            Name = "Model S"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 13, 5, 54, 19, 575, DateTimeKind.Local).AddTicks(8280),
                            IdMarque = 7,
                            Name = "XC90"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 2, 11, 7, 13, 27, 508, DateTimeKind.Local).AddTicks(716),
                            IdMarque = 9,
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 1, 20, 0, 6, 988, DateTimeKind.Local).AddTicks(4620),
                            IdMarque = 8,
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 8, 0, 29, 55, 39, DateTimeKind.Local).AddTicks(1397),
                            IdMarque = 5,
                            Name = "Jetta"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 4, 12, 13, 5, 622, DateTimeKind.Local).AddTicks(5437),
                            IdMarque = 10,
                            Name = "2"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 18, 19, 46, 13, 296, DateTimeKind.Local).AddTicks(917),
                            IdMarque = 3,
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 5, 3, 15, 4, 47, 48, DateTimeKind.Local).AddTicks(4907),
                            IdMarque = 8,
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 23, 5, 3, 42, 982, DateTimeKind.Local).AddTicks(8772),
                            IdMarque = 5,
                            Name = "Cruze"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 1, 14, 14, 7, 23, 69, DateTimeKind.Local).AddTicks(6000),
                            IdMarque = 2,
                            Name = "LeBaron"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 17, 23, 13, 750, DateTimeKind.Local).AddTicks(204),
                            Email = "Katrina_Thiel9@hotmail.com",
                            FirstName = "Grayson",
                            IdAgence = 2,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Hettinger",
                            Password = "$2a$11$c19i4JdgeXXcJm9hEed8/OJq5ZoP2TE88O0LCcrROSX8sATqxbAl6"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 30, 0, 17, 39, 171, DateTimeKind.Local).AddTicks(9118),
                            Email = "Leif.Dicki@hotmail.com",
                            FirstName = "Leonora",
                            IdAgence = 4,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Stracke",
                            Password = "$2a$11$VV6XKlZErIaIJri4KdmXKeo4p1DmwGLE2.SU46ld/2AqSQ75tupBu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 2, 2, 34, 13, 246, DateTimeKind.Local).AddTicks(9486),
                            Email = "Thora68@hotmail.com",
                            FirstName = "Domingo",
                            IdAgence = 1,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Wilkinson",
                            Password = "$2a$11$X6meqXnFIaOppg5vb0Q4qeeWPGnLkAJ7iYqzWEmJgT2lkUmR/as8W"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 6, 2, 2, 3, 31, 465, DateTimeKind.Local).AddTicks(3231),
                            Email = "Jermain_Feil@yahoo.com",
                            FirstName = "Jeffery",
                            IdAgence = 1,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Mohr",
                            Password = "$2a$11$/agpNactWPiI2gOnmgu44u.Rf3OFbeujjMoaBguTP2mAg/AuqWYBS"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 9, 16, 8, 13, 31, 278, DateTimeKind.Local).AddTicks(7179),
                            Email = "Joan_Marvin15@gmail.com",
                            FirstName = "Beulah",
                            IdAgence = 7,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "O'Kon",
                            Password = "$2a$11$AppaEhKaCTpIYslReK6cn.PJRYuseXr5OTM1zxLIZASvo3iH2oNAm"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 2, 15, 0, 32, 872, DateTimeKind.Local).AddTicks(5235),
                            Email = "Milford.Romaguera@gmail.com",
                            FirstName = "Naomie",
                            IdAgence = 9,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Volkman",
                            Password = "$2a$11$kXsqiPjiJoZ8geOBQWIcPeEFwpCkArhMgbH7uyRevDBZ/wuNy9N.S"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 3, 9, 19, 3, 38, 873, DateTimeKind.Local).AddTicks(5394),
                            Email = "Regan54@yahoo.com",
                            FirstName = "Keon",
                            IdAgence = 7,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Torp",
                            Password = "$2a$11$GmkUYkhY6kvTBvS3pwx/wOZ6mmKXGKW0DQxPKdA8exILStFzEEfxe"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 2, 20, 10, 35, 609, DateTimeKind.Local).AddTicks(390),
                            Email = "Rusty_Hermiston@hotmail.com",
                            FirstName = "Chloe",
                            IdAgence = 9,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Strosin",
                            Password = "$2a$11$orVRvQC4MgadreS4uK1SYufRUhR355sYe40DxXkfxQxLcgZhKRSia"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 15, 5, 46, 5, 84, DateTimeKind.Local).AddTicks(2951),
                            Email = "Marion_Mante38@yahoo.com",
                            FirstName = "Dakota",
                            IdAgence = 1,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Lemke",
                            Password = "$2a$11$ghUnVNdPoEHPXKcCbZlzZ.f4N3Xmy4pzsN/erk4OQ/U9iMiBboSMW"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 11, 4, 10, 3, 7, 441, DateTimeKind.Local).AddTicks(4606),
                            Email = "Sofia_Mosciski23@hotmail.com",
                            FirstName = "Raleigh",
                            IdAgence = 6,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Jacobs",
                            Password = "$2a$11$9YkMMPwWbwcaE9bDdUPBKOC/0Rb5qxp6PpsCRimqQYzwEyNBP7IFW"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
