// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230717171136_contart_champs_isConducteur")]
    partial class contart_champs_isConducteur
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "36346 Heidenreich Trail",
                            City = "Mitchellville",
                            CreatedAt = new DateTime(2022, 9, 30, 10, 3, 27, 551, DateTimeKind.Local).AddTicks(8682),
                            Email = "Josephine_Vandervort21@hotmail.com",
                            Latitude = 57.352400000000003,
                            Longitude = -61.440199999999997,
                            Name = "Legacy Implementation Facilitator",
                            Tel = "(916) 707-8241",
                            ZipCode = "41634"
                        },
                        new
                        {
                            Id = 2,
                            Address = "42823 Hegmann Manors",
                            City = "Gloverland",
                            CreatedAt = new DateTime(2023, 4, 17, 22, 7, 24, 103, DateTimeKind.Local).AddTicks(2048),
                            Email = "Pearl_Volkman@yahoo.com",
                            Latitude = -82.5334,
                            Longitude = -76.043400000000005,
                            Name = "Chief Accounts Associate",
                            Tel = "976.852.8344 x5712",
                            ZipCode = "30979"
                        },
                        new
                        {
                            Id = 3,
                            Address = "156 August Parkway",
                            City = "Port Eltonside",
                            CreatedAt = new DateTime(2023, 4, 30, 9, 27, 36, 70, DateTimeKind.Local).AddTicks(9651),
                            Email = "Laverna.Zboncak@hotmail.com",
                            Latitude = 31.337700000000002,
                            Longitude = 140.00579999999999,
                            Name = "Dynamic Functionality Administrator",
                            Tel = "1-970-416-8379 x3589",
                            ZipCode = "40883"
                        },
                        new
                        {
                            Id = 4,
                            Address = "3436 Maribel Plaza",
                            City = "Uptonfurt",
                            CreatedAt = new DateTime(2023, 1, 21, 5, 13, 5, 168, DateTimeKind.Local).AddTicks(4495),
                            Email = "Rahul8@hotmail.com",
                            Latitude = 19.221499999999999,
                            Longitude = -175.23480000000001,
                            Name = "Regional Marketing Facilitator",
                            Tel = "666-649-5784",
                            ZipCode = "32997"
                        },
                        new
                        {
                            Id = 5,
                            Address = "006 Emmett Centers",
                            City = "Wildermanshire",
                            CreatedAt = new DateTime(2022, 11, 27, 10, 7, 54, 330, DateTimeKind.Local).AddTicks(1034),
                            Email = "Vladimir39@hotmail.com",
                            Latitude = -82.410799999999995,
                            Longitude = 156.40799999999999,
                            Name = "Regional Functionality Planner",
                            Tel = "384-237-2411 x12571",
                            ZipCode = "06966"
                        },
                        new
                        {
                            Id = 6,
                            Address = "845 Alexanne Via",
                            City = "Johanshire",
                            CreatedAt = new DateTime(2022, 10, 5, 16, 12, 34, 664, DateTimeKind.Local).AddTicks(7497),
                            Email = "Minnie1@yahoo.com",
                            Latitude = 9.5236999999999998,
                            Longitude = -23.294899999999998,
                            Name = "District Integration Strategist",
                            Tel = "1-622-207-0889",
                            ZipCode = "22907-2184"
                        },
                        new
                        {
                            Id = 7,
                            Address = "784 Hoppe Lock",
                            City = "West Lamar",
                            CreatedAt = new DateTime(2022, 10, 12, 19, 33, 0, 258, DateTimeKind.Local).AddTicks(6636),
                            Email = "Zelda_Casper75@gmail.com",
                            Latitude = 87.396299999999997,
                            Longitude = -4.9683000000000002,
                            Name = "Dynamic Implementation Executive",
                            Tel = "1-717-737-6686",
                            ZipCode = "24097"
                        },
                        new
                        {
                            Id = 8,
                            Address = "3612 Harmon Land",
                            City = "South Aryanna",
                            CreatedAt = new DateTime(2023, 2, 7, 15, 39, 22, 686, DateTimeKind.Local).AddTicks(6741),
                            Email = "Hailee41@gmail.com",
                            Latitude = 76.628399999999999,
                            Longitude = -81.446899999999999,
                            Name = "Future Applications Officer",
                            Tel = "967-914-7336 x9765",
                            ZipCode = "82195"
                        },
                        new
                        {
                            Id = 9,
                            Address = "2010 Denis Squares",
                            City = "East Willowside",
                            CreatedAt = new DateTime(2022, 11, 23, 21, 28, 22, 353, DateTimeKind.Local).AddTicks(2628),
                            Email = "Clifford.Treutel88@gmail.com",
                            Latitude = -77.353800000000007,
                            Longitude = -50.784599999999998,
                            Name = "District Web Officer",
                            Tel = "1-501-297-4504",
                            ZipCode = "18165"
                        },
                        new
                        {
                            Id = 10,
                            Address = "678 Adelbert Villages",
                            City = "Uptonstad",
                            CreatedAt = new DateTime(2022, 11, 12, 4, 2, 37, 505, DateTimeKind.Local).AddTicks(9025),
                            Email = "Ole_Cronin@hotmail.com",
                            Latitude = -8.6935000000000002,
                            Longitude = -70.441599999999994,
                            Name = "Direct Web Orchestrator",
                            Tel = "1-805-846-6846 x07216",
                            ZipCode = "96189-7826"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<bool>("IsConducteur")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 6, 14, 20, 2, 822, DateTimeKind.Local).AddTicks(299),
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 5, 11, 37, 21, 338, DateTimeKind.Local).AddTicks(2261),
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 18, 15, 23, 6, 379, DateTimeKind.Local).AddTicks(1490),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 11, 23, 11, 57, 6, 45, DateTimeKind.Local).AddTicks(6589),
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 26, 13, 37, 17, 622, DateTimeKind.Local).AddTicks(2759),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 12, 2, 51, 46, 258, DateTimeKind.Local).AddTicks(435),
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 5, 17, 14, 38, 58, 981, DateTimeKind.Local).AddTicks(384),
                            Name = "Smart"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 27, 6, 32, 1, 797, DateTimeKind.Local).AddTicks(3090),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 3, 24, 17, 33, 23, 943, DateTimeKind.Local).AddTicks(6071),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 17, 7, 12, 41, 922, DateTimeKind.Local).AddTicks(5323),
                            Name = "Jeep"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 18, 11, 13, 27, 544, DateTimeKind.Local).AddTicks(2571),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=477",
                            Name = "Accord"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 4, 5, 39, 13, 553, DateTimeKind.Local).AddTicks(4917),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=57",
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 26, 2, 17, 24, 651, DateTimeKind.Local).AddTicks(9559),
                            IdMarque = 1,
                            Image = "https://picsum.photos/640/480/?image=423",
                            Name = "Spyder"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 11, 14, 2, 20, 31, 733, DateTimeKind.Local).AddTicks(4558),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=645",
                            Name = "V90"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 2, 16, 21, 21, 41, 262, DateTimeKind.Local).AddTicks(6091),
                            IdMarque = 8,
                            Image = "https://picsum.photos/640/480/?image=297",
                            Name = "LeBaron"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 4, 24, 7, 30, 30, 423, DateTimeKind.Local).AddTicks(4879),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=378",
                            Name = "Altima"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 9, 11, 34, 14, 532, DateTimeKind.Local).AddTicks(1872),
                            IdMarque = 4,
                            Image = "https://picsum.photos/640/480/?image=55",
                            Name = "Countach"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 6, 27, 13, 55, 43, 294, DateTimeKind.Local).AddTicks(8131),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=785",
                            Name = "Element"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 5, 17, 16, 32, 52, 777, DateTimeKind.Local).AddTicks(4069),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=423",
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 13, 23, 40, 25, 654, DateTimeKind.Local).AddTicks(8841),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=732",
                            Name = "CTS"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 11, 15, 23, 41, 57, 31, DateTimeKind.Local).AddTicks(9074),
                            Email = "Manuela_Hoppe@yahoo.com",
                            FirstName = "Morgan",
                            IdAgence = 4,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Bahringer",
                            Password = "$2a$11$avNpB9AiinM.ZuAwEHCMSeFdGL/kE4oG/iyyk5x44dnbnthbEZJoW"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 11, 4, 49, 59, 367, DateTimeKind.Local).AddTicks(5770),
                            Email = "Agustina32@hotmail.com",
                            FirstName = "Neha",
                            IdAgence = 3,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Hayes",
                            Password = "$2a$11$OmHESyS139XaAfDas5z4auVpwRqS4lnOzGNzQTikqs5YjGEs.xige"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 4, 9, 13, 31, 12, 418, DateTimeKind.Local).AddTicks(4099),
                            Email = "Victor_Veum2@hotmail.com",
                            FirstName = "Tyrel",
                            IdAgence = 7,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Feest",
                            Password = "$2a$11$LYUy2WxpiLzMqwa094QBa.dXCTp9N6JIDvpHWeZIf7pZXDIZRPFGS"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 9, 7, 54, 7, 6, DateTimeKind.Local).AddTicks(4218),
                            Email = "Clint_Bahringer26@yahoo.com",
                            FirstName = "Anna",
                            IdAgence = 7,
                            IdRole = 2,
                            IsActive = false,
                            LastName = "Borer",
                            Password = "$2a$11$9rvuAAVoJ4WddpoXnm7eYuB.kd0bD/g1QaeNIltNDBfO3T9izOiTW"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 8, 2, 34, 40, 385, DateTimeKind.Local).AddTicks(3840),
                            Email = "Thomas32@yahoo.com",
                            FirstName = "Tressa",
                            IdAgence = 10,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Quigley",
                            Password = "$2a$11$CC7ZslUdPh53MoA1fB7No.ifwZW5xeLPL8fL.sw0rBq5RHrmOqpGS"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 25, 9, 4, 10, 855, DateTimeKind.Local).AddTicks(4556),
                            Email = "Frederic_Hintz@hotmail.com",
                            FirstName = "Kenyon",
                            IdAgence = 4,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Rippin",
                            Password = "$2a$11$1W466vVTdHe1BvScDZvKVuciL/IqAavgh2a69/nxlaXyTrnaMWbhe"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 1, 28, 12, 0, 29, 683, DateTimeKind.Local).AddTicks(8954),
                            Email = "Alverta.Powlowski@yahoo.com",
                            FirstName = "Juliana",
                            IdAgence = 3,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Wyman",
                            Password = "$2a$11$XPGqWKAr7xIPlLBX3cQhveJBdyfhGv320A0tPF6pi.PyoISFHMLb."
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 23, 22, 23, 43, 237, DateTimeKind.Local).AddTicks(9366),
                            Email = "Tad.Schaefer@gmail.com",
                            FirstName = "Erica",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Conn",
                            Password = "$2a$11$FYwTP5xuBqQ8NSd3hS3vv.kHVnRMNPaWC2T5NF5nyS4jvSCkOcR9S"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 3, 21, 0, 1, 557, DateTimeKind.Local).AddTicks(2501),
                            Email = "Maye17@gmail.com",
                            FirstName = "Sabina",
                            IdAgence = 6,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Heaney",
                            Password = "$2a$11$b66nuFO2oEm1wbJGgQ1a0uuau8m8aqnKjCvTPg/Sy5T.tXTKbkZoW"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 9, 19, 6, 54, 3, 8, DateTimeKind.Local).AddTicks(2328),
                            Email = "Lue.Will79@gmail.com",
                            FirstName = "Vinnie",
                            IdAgence = 2,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Cummings",
                            Password = "$2a$11$jlkjneHEMYLKGHWJALgZIuc0ZgtsVHi9WEGbh39Cy1HItd4AC2vwi"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
