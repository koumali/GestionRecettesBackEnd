// <auto-generated />
using System;
using AutomotiveApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomotiveApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230718014336_nullable_fields_in_client_2")]
    partial class nullable_fields_in_client_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "12855 Luettgen Dale",
                            City = "Framiton",
                            CreatedAt = new DateTime(2023, 5, 9, 12, 6, 41, 881, DateTimeKind.Local).AddTicks(8863),
                            Email = "Constantin51@hotmail.com",
                            Latitude = -63.026000000000003,
                            Longitude = -98.079999999999998,
                            Name = "Product Paradigm Coordinator",
                            Tel = "(500) 492-3254 x57721",
                            ZipCode = "08439-7035"
                        },
                        new
                        {
                            Id = 2,
                            Address = "5530 Cruickshank Junction",
                            City = "New Ferne",
                            CreatedAt = new DateTime(2022, 12, 8, 11, 34, 31, 294, DateTimeKind.Local).AddTicks(6410),
                            Email = "Monica.Schultz@hotmail.com",
                            Latitude = 39.442700000000002,
                            Longitude = 172.20849999999999,
                            Name = "Human Division Facilitator",
                            Tel = "929.302.4523",
                            ZipCode = "41435-7075"
                        },
                        new
                        {
                            Id = 3,
                            Address = "70017 Douglas Overpass",
                            City = "New Rosemarie",
                            CreatedAt = new DateTime(2022, 9, 20, 1, 11, 14, 728, DateTimeKind.Local).AddTicks(9849),
                            Email = "Jaquan_Armstrong@gmail.com",
                            Latitude = -10.6967,
                            Longitude = -51.061700000000002,
                            Name = "Future Accounts Planner",
                            Tel = "418.928.4944 x0996",
                            ZipCode = "90700"
                        },
                        new
                        {
                            Id = 4,
                            Address = "2113 Bode Fields",
                            City = "East Vanceburgh",
                            CreatedAt = new DateTime(2022, 8, 31, 12, 5, 48, 138, DateTimeKind.Local).AddTicks(5334),
                            Email = "German.Botsford@hotmail.com",
                            Latitude = 29.382899999999999,
                            Longitude = 52.145099999999999,
                            Name = "Dynamic Branding Representative",
                            Tel = "(482) 477-5858 x54941",
                            ZipCode = "01374-6576"
                        },
                        new
                        {
                            Id = 5,
                            Address = "50492 Danika Extensions",
                            City = "Alphonsoland",
                            CreatedAt = new DateTime(2023, 6, 11, 22, 47, 54, 375, DateTimeKind.Local).AddTicks(6996),
                            Email = "Rosanna_Schumm@yahoo.com",
                            Latitude = -7.7531999999999996,
                            Longitude = -87.170199999999994,
                            Name = "Dynamic Creative Administrator",
                            Tel = "1-659-810-0574 x779",
                            ZipCode = "67463"
                        },
                        new
                        {
                            Id = 6,
                            Address = "5000 Braun Knoll",
                            City = "Hillsstad",
                            CreatedAt = new DateTime(2022, 8, 15, 14, 45, 8, 323, DateTimeKind.Local).AddTicks(6635),
                            Email = "Keyon.Adams@yahoo.com",
                            Latitude = -17.693999999999999,
                            Longitude = -55.4895,
                            Name = "Lead Assurance Planner",
                            Tel = "1-771-982-5682 x87346",
                            ZipCode = "45311-3880"
                        },
                        new
                        {
                            Id = 7,
                            Address = "14487 Claud Creek",
                            City = "South Modesta",
                            CreatedAt = new DateTime(2023, 7, 15, 23, 58, 30, 171, DateTimeKind.Local).AddTicks(5707),
                            Email = "Norwood_Romaguera@yahoo.com",
                            Latitude = 26.931100000000001,
                            Longitude = -153.86330000000001,
                            Name = "Corporate Interactions Planner",
                            Tel = "500.771.3607",
                            ZipCode = "66306-1149"
                        },
                        new
                        {
                            Id = 8,
                            Address = "02710 Stokes Streets",
                            City = "West Savanahhaven",
                            CreatedAt = new DateTime(2023, 1, 11, 20, 30, 46, 28, DateTimeKind.Local).AddTicks(8420),
                            Email = "Edmond.Powlowski@yahoo.com",
                            Latitude = -85.633300000000006,
                            Longitude = 104.7063,
                            Name = "National Accounts Representative",
                            Tel = "1-747-834-6922 x115",
                            ZipCode = "31207-8724"
                        },
                        new
                        {
                            Id = 9,
                            Address = "55728 Mertz Summit",
                            City = "West Selinachester",
                            CreatedAt = new DateTime(2022, 12, 7, 8, 58, 35, 890, DateTimeKind.Local).AddTicks(6994),
                            Email = "Jennyfer41@hotmail.com",
                            Latitude = 41.514699999999998,
                            Longitude = 70.996099999999998,
                            Name = "Customer Implementation Associate",
                            Tel = "809-869-5319 x53906",
                            ZipCode = "67862-3184"
                        },
                        new
                        {
                            Id = 10,
                            Address = "74331 Howell Overpass",
                            City = "Lake Lyric",
                            CreatedAt = new DateTime(2023, 6, 26, 3, 51, 13, 375, DateTimeKind.Local).AddTicks(6895),
                            Email = "Lenora.Lueilwitz@hotmail.com",
                            Latitude = 22.179300000000001,
                            Longitude = -86.148099999999999,
                            Name = "Direct Group Planner",
                            Tel = "962.673.4676 x4055",
                            ZipCode = "92492"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Adresse2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PermisRecto")
                        .HasColumnType("longtext");

                    b.Property<string>("PermisVerso")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<bool>("IsConducteur")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdReservation");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 28, 18, 30, 33, 60, DateTimeKind.Local).AddTicks(4170),
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 20, 8, 11, 36, 554, DateTimeKind.Local).AddTicks(5102),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 7, 21, 29, 50, 376, DateTimeKind.Local).AddTicks(9425),
                            Name = "Bugatti"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 15, 11, 17, 36, 983, DateTimeKind.Local).AddTicks(2883),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 27, 16, 30, 40, 545, DateTimeKind.Local).AddTicks(2029),
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 11, 23, 2, 40, 49, 407, DateTimeKind.Local).AddTicks(9220),
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 8, 18, 23, 51, 573, DateTimeKind.Local).AddTicks(9848),
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 4, 10, 4, 34, 7, 325, DateTimeKind.Local).AddTicks(3278),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 7, 20, 5, 59, 658, DateTimeKind.Local).AddTicks(3932),
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 5, 14, 2, 2, 27, 764, DateTimeKind.Local).AddTicks(6448),
                            Name = "Kia"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMarque")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarque");

                    b.ToTable("Modeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 6, 7, 0, 42, 31, DateTimeKind.Local).AddTicks(2870),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=406",
                            Name = "Spyder"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 12, 0, 28, 2, 753, DateTimeKind.Local).AddTicks(3423),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=236",
                            Name = "Taurus"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 27, 0, 43, 28, 437, DateTimeKind.Local).AddTicks(5594),
                            IdMarque = 3,
                            Image = "https://picsum.photos/640/480/?image=548",
                            Name = "Expedition"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 13, 23, 13, 10, 630, DateTimeKind.Local).AddTicks(3225),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=802",
                            Name = "Wrangler"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 25, 11, 53, 1, 449, DateTimeKind.Local).AddTicks(8036),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=730",
                            Name = "Camaro"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 20, 10, 52, 27, 56, DateTimeKind.Local).AddTicks(4412),
                            IdMarque = 6,
                            Image = "https://picsum.photos/640/480/?image=113",
                            Name = "Land Cruiser"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 10, 18, 11, 19, 6, 856, DateTimeKind.Local).AddTicks(8969),
                            IdMarque = 5,
                            Image = "https://picsum.photos/640/480/?image=779",
                            Name = "Model T"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 30, 11, 20, 15, 927, DateTimeKind.Local).AddTicks(3564),
                            IdMarque = 9,
                            Image = "https://picsum.photos/640/480/?image=616",
                            Name = "Cruze"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 7, 26, 21, 22, 0, 698, DateTimeKind.Local).AddTicks(509),
                            IdMarque = 2,
                            Image = "https://picsum.photos/640/480/?image=1069",
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 4, 12, 3, 59, 5, 501, DateTimeKind.Local).AddTicks(3901),
                            IdMarque = 7,
                            Image = "https://picsum.photos/640/480/?image=322",
                            Name = "Camry"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Climat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdModele")
                        .HasColumnType("int");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Moteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbPassager")
                        .HasColumnType("int");

                    b.Property<int>("NbPort")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdModele");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Log_journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameController")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFonction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("log_journal");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gerant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Agent"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Client"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 25, 7, 43, 22, 798, DateTimeKind.Local).AddTicks(2362),
                            Email = "Roderick_Fay@hotmail.com",
                            FirstName = "Dedric",
                            IdAgence = 3,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Sauer",
                            Password = "$2a$11$fGgI8mkxfJSvFidbCECNiuYhe9uTwjUfFskLHv.MIvmPw8I.iQN1G"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 9, 26, 11, 15, 50, 444, DateTimeKind.Local).AddTicks(7056),
                            Email = "Nigel.Corwin95@gmail.com",
                            FirstName = "Geovanni",
                            IdAgence = 2,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "Walker",
                            Password = "$2a$11$2589VZVFoa.FIvp8BZVL/.AEsNntNWZOkEf1HO1xfPRZG04cOP1ee"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 19, 23, 33, 46, 779, DateTimeKind.Local).AddTicks(5695),
                            Email = "Concepcion.Orn@yahoo.com",
                            FirstName = "Nyasia",
                            IdAgence = 8,
                            IdRole = 3,
                            IsActive = true,
                            LastName = "Robel",
                            Password = "$2a$11$lLRaWfTMGKHAsG/XJ5fFCesamk/4aFd.z1vREudJPK1dgOBr/IhTi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 27, 18, 14, 53, 988, DateTimeKind.Local).AddTicks(5419),
                            Email = "Matilde.Quitzon@hotmail.com",
                            FirstName = "Delta",
                            IdAgence = 10,
                            IdRole = 4,
                            IsActive = false,
                            LastName = "Waters",
                            Password = "$2a$11$7XlQmVZ6pbwMpqf0G3qmZeHoBnU1sbV1Itsd.Ypk4X9qu3FGcUPpq"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 11, 12, 10, 16, 27, 86, DateTimeKind.Local).AddTicks(4790),
                            Email = "Clair27@gmail.com",
                            FirstName = "Nigel",
                            IdAgence = 8,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Murphy",
                            Password = "$2a$11$zvVTKIftIkm6SOR2vN38B.gUGOAXKWpzdSA8EOlth39qT2gXvCNZC"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 24, 11, 6, 23, 616, DateTimeKind.Local).AddTicks(4277),
                            Email = "Ubaldo_Nienow94@gmail.com",
                            FirstName = "Carey",
                            IdAgence = 3,
                            IdRole = 3,
                            IsActive = false,
                            LastName = "Boyer",
                            Password = "$2a$11$9XhHqaecMRAopf6b4vLlMeKadk/uYYlOxozGosGvRCG99JFHoyXbe"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 23, 19, 59, 13, 765, DateTimeKind.Local).AddTicks(6340),
                            Email = "Gunner_Oberbrunner2@gmail.com",
                            FirstName = "Cecil",
                            IdAgence = 10,
                            IdRole = 2,
                            IsActive = true,
                            LastName = "Abbott",
                            Password = "$2a$11$wV1E00emDiowXGCaS/o.YuM9Nfns8Ey/eK0Qg5J/S13hSWRy47w86"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 1, 14, 12, 56, 10, 335, DateTimeKind.Local).AddTicks(583),
                            Email = "Dexter13@gmail.com",
                            FirstName = "Alivia",
                            IdAgence = 5,
                            IdRole = 4,
                            IsActive = true,
                            LastName = "Erdman",
                            Password = "$2a$11$qqf4so6.01JLnqL4KrUhueZL2X3gul/rQlykbLg78bOQ0d.hwLKIK"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 11, 28, 16, 17, 49, 991, DateTimeKind.Local).AddTicks(6836),
                            Email = "Cara.Hammes@yahoo.com",
                            FirstName = "Nico",
                            IdAgence = 4,
                            IdRole = 1,
                            IsActive = true,
                            LastName = "Prosacco",
                            Password = "$2a$11$tLZ.XmtzsNBo1BC5woZ7GuPSbMSz2or1neubp12lvumUeH.spM0gm"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 23, 3, 17, 49, 207, DateTimeKind.Local).AddTicks(8137),
                            Email = "Hershel10@yahoo.com",
                            FirstName = "Daisy",
                            IdAgence = 2,
                            IdRole = 1,
                            IsActive = false,
                            LastName = "VonRueden",
                            Password = "$2a$11$SZy8tignHbvRZpPjUCCsTe.Ka/e.8Ztfl8PspuR5Q72lmFJVvzILm"
                        });
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Contrat", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Client", "Client")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_client");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Reservation", "Reservation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Contrats_id_reservation");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Marque", "Marque")
                        .WithMany("Modeles")
                        .HasForeignKey("IdMarque")
                        .IsRequired()
                        .HasConstraintName("FK_Modeles_id_marque");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Offre", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Offre")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Offre_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Vehicule", "Vehicule")
                        .WithMany("Reservation")
                        .HasForeignKey("IdVehicule")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_id_vehicule");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdAgence")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Modele", "Modele")
                        .WithMany("Vehicules")
                        .HasForeignKey("IdModele")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicules_id_modele");

                    b.Navigation("Agence");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.User", b =>
                {
                    b.HasOne("AutomotiveApi.Models.Entities.Gestion.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("IdAgence")
                        .HasConstraintName("FK_Users_id_agence");

                    b.HasOne("AutomotiveApi.Models.Entities.Param.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_id_role");

                    b.Navigation("Agence");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Agence", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Marque", b =>
                {
                    b.Navigation("Modeles");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Modele", b =>
                {
                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Reservation", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Gestion.Vehicule", b =>
                {
                    b.Navigation("Offre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("AutomotiveApi.Models.Entities.Param.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
